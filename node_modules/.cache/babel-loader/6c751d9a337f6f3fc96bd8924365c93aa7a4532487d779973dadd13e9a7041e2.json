{"ast":null,"code":"import Vue from \"vue\";\nimport Router from \"vue-router\";\nimport HomeView from \"../views/HomeView.vue\";\nimport UserView from \"../views/UserView.vue\";\nimport SettingView from \"../views/SettingView.vue\";\nimport LoginView from \"../views/LoginView.vue\";\nVue.use(Router);\nconst router = new Router({\n  mode: \"history\",\n  routes: [{\n    path: \"/\",\n    redirect: \"/login\"\n  }, {\n    path: \"/login\",\n    name: \"Login\",\n    component: LoginView\n  }, {\n    path: \"/home\",\n    name: \"Home\",\n    component: HomeView\n  }, {\n    path: \"/user\",\n    name: \"User\",\n    component: UserView\n  }, {\n    path: \"/setting\",\n    name: \"Setting\",\n    component: SettingView\n  }]\n});\n\n// 添加全局路由守卫\nrouter.beforeEach((to, from, next) => {\n  alert(\"beforeEach 01\");\n  const isAuthenticated = !!localStorage.getItem(\"token\"); // 假设通过 token 判断登录状态\n  alert(\"beforeEach 02:\" + to.meta.requiresAuth);\n  alert(\"beforeEach 03:\" + isAuthenticated);\n  if (to.meta.requiresAuth && !isAuthenticated) {\n    alert(\"ログインせずにシステムへアクセスした。\");\n    // 如果目标路由需要登录，且用户未登录\n    return next(\"/login\"); // 跳转到登录页\n  }\n  alert(\"beforeEach 03\");\n  next(); // 放行\n});\nexport default router;","map":{"version":3,"names":["Vue","Router","HomeView","UserView","SettingView","LoginView","use","router","mode","routes","path","redirect","name","component","beforeEach","to","from","next","alert","isAuthenticated","localStorage","getItem","meta","requiresAuth"],"sources":["D:/soft/workspace/cms_vue_front/src/router/index.js"],"sourcesContent":["import Vue from \"vue\";\r\nimport Router from \"vue-router\";\r\nimport HomeView from \"../views/HomeView.vue\";\r\nimport UserView from \"../views/UserView.vue\";\r\nimport SettingView from \"../views/SettingView.vue\";\r\nimport LoginView from \"../views/LoginView.vue\";\r\n\r\nVue.use(Router);\r\n\r\nconst router = new Router({\r\n  mode: \"history\",\r\n  routes: [\r\n    { path: \"/\", redirect: \"/login\" },\r\n    { path: \"/login\", name: \"Login\", component: LoginView },\r\n    { path: \"/home\", name: \"Home\", component: HomeView },\r\n    { path: \"/user\", name: \"User\", component: UserView },\r\n    { path: \"/setting\", name: \"Setting\", component: SettingView },\r\n  ],\r\n});\r\n\r\n// 添加全局路由守卫\r\nrouter.beforeEach((to, from, next) => {\r\n  alert(\"beforeEach 01\");\r\n  const isAuthenticated = !!localStorage.getItem(\"token\"); // 假设通过 token 判断登录状态\r\n  alert(\"beforeEach 02:\"+to.meta.requiresAuth);\r\n  alert(\"beforeEach 03:\"+isAuthenticated);\r\n  if (to.meta.requiresAuth && !isAuthenticated) {\r\n    alert(\"ログインせずにシステムへアクセスした。\");\r\n    // 如果目标路由需要登录，且用户未登录\r\n    return next(\"/login\"); // 跳转到登录页\r\n  }\r\n  alert(\"beforeEach 03\");\r\n  next(); // 放行\r\n});\r\n\r\nexport default router;"],"mappings":"AAAA,OAAOA,GAAG,MAAM,KAAK;AACrB,OAAOC,MAAM,MAAM,YAAY;AAC/B,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,WAAW,MAAM,0BAA0B;AAClD,OAAOC,SAAS,MAAM,wBAAwB;AAE9CL,GAAG,CAACM,GAAG,CAACL,MAAM,CAAC;AAEf,MAAMM,MAAM,GAAG,IAAIN,MAAM,CAAC;EACxBO,IAAI,EAAE,SAAS;EACfC,MAAM,EAAE,CACN;IAAEC,IAAI,EAAE,GAAG;IAAEC,QAAQ,EAAE;EAAS,CAAC,EACjC;IAAED,IAAI,EAAE,QAAQ;IAAEE,IAAI,EAAE,OAAO;IAAEC,SAAS,EAAER;EAAU,CAAC,EACvD;IAAEK,IAAI,EAAE,OAAO;IAAEE,IAAI,EAAE,MAAM;IAAEC,SAAS,EAAEX;EAAS,CAAC,EACpD;IAAEQ,IAAI,EAAE,OAAO;IAAEE,IAAI,EAAE,MAAM;IAAEC,SAAS,EAAEV;EAAS,CAAC,EACpD;IAAEO,IAAI,EAAE,UAAU;IAAEE,IAAI,EAAE,SAAS;IAAEC,SAAS,EAAET;EAAY,CAAC;AAEjE,CAAC,CAAC;;AAEF;AACAG,MAAM,CAACO,UAAU,CAAC,CAACC,EAAE,EAAEC,IAAI,EAAEC,IAAI,KAAK;EACpCC,KAAK,CAAC,eAAe,CAAC;EACtB,MAAMC,eAAe,GAAG,CAAC,CAACC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;EACzDH,KAAK,CAAC,gBAAgB,GAACH,EAAE,CAACO,IAAI,CAACC,YAAY,CAAC;EAC5CL,KAAK,CAAC,gBAAgB,GAACC,eAAe,CAAC;EACvC,IAAIJ,EAAE,CAACO,IAAI,CAACC,YAAY,IAAI,CAACJ,eAAe,EAAE;IAC5CD,KAAK,CAAC,qBAAqB,CAAC;IAC5B;IACA,OAAOD,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;EACzB;EACAC,KAAK,CAAC,eAAe,CAAC;EACtBD,IAAI,CAAC,CAAC,CAAC,CAAC;AACV,CAAC,CAAC;AAEF,eAAeV,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}