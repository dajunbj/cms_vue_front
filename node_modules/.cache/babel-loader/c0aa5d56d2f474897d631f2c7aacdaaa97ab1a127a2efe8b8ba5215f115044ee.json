{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nimport CommonSearchDialog from \"@/components/CommonSearchDialog.vue\";\nexport default {\n  name: \"EmployeeRegisterView\",\n  components: {\n    CommonSearchDialog\n  },\n  data() {\n    return {\n      employeeName: \"\",\n      department: \"\",\n      companyName: \"\",\n      companyId: \"\",\n      email: \"\",\n      dialogVisible: false,\n      //会社選択画面の明細データ\n      dialogData: [],\n      //会社選択画面の明細項目定義\n      dialogColumns: [{\n        prop: \"id\",\n        label: \"ID\",\n        width: \"100\"\n      }, {\n        prop: \"name\",\n        label: \"名前\",\n        width: \"220\"\n      }, {\n        prop: \"department\",\n        label: \"部門\",\n        width: \"220\"\n      }],\n      //検索条件\n      dialogFilters: [{\n        prop: \"name\",\n        label: \"名前\",\n        type: \"el-input\",\n        width: 300,\n        props: {\n          placeholder: \"名前を入力してください\",\n          clearable: true\n        }\n      }, {\n        prop: \"department\",\n        label: \"部門\",\n        type: \"el-select\",\n        width: 300,\n        props: {\n          placeholder: \"部門を選択してください\",\n          clearable: true,\n          options: [{\n            label: \"営業\",\n            value: \"営業\"\n          }, {\n            label: \"開発\",\n            value: \"開発\"\n          }, {\n            label: \"経理\",\n            value: \"経理\"\n          }]\n        }\n      }]\n    };\n  },\n  methods: {\n    showDialog() {\n      this.dialogVisible = true;\n    },\n    handleSelectCompany(selectedCompany) {\n      this.companyName = selectedCompany.name;\n      this.companyId = selectedCompany.id;\n    },\n    async registerEmployee() {\n      try {\n        // const response = \n        await axios.post('/employee/register', {\n          employeeName: this.employeeName,\n          department: this.department,\n          companyName: this.companyName,\n          companyId: this.companyId,\n          email: this.email\n        });\n        this.$message.success('登録が成功しました');\n        this.resetForm();\n      } catch (error) {\n        this.$message.error('登録に失敗しました: ' + error);\n      }\n    },\n    resetForm() {\n      this.employeeName = \"\";\n      this.department = \"\";\n      this.companyName = \"\";\n      this.companyId = \"\";\n      this.email = \"\";\n      //新規画面へ遷移する\n      this.$router.push('/employee');\n    }\n  }\n};","map":{"version":3,"names":["axios","CommonSearchDialog","name","components","data","employeeName","department","companyName","companyId","email","dialogVisible","dialogData","dialogColumns","prop","label","width","dialogFilters","type","props","placeholder","clearable","options","value","methods","showDialog","handleSelectCompany","selectedCompany","id","registerEmployee","post","$message","success","resetForm","error","$router","push"],"sources":["src/views/employee/EmployeeRegisterView.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h2>社員新規画面</h2>\r\n    <!-- 社員名入力 -->\r\n    <el-row style=\"margin-bottom: 20px;\">\r\n      <el-col :span=\"8\">\r\n        <el-input v-model=\"employeeName\" placeholder=\"社員名をご入力ください。\" clearable></el-input>\r\n      </el-col>\r\n    </el-row>\r\n\r\n    <!-- 部門選択 -->\r\n    <el-row style=\"margin-bottom: 20px;\">\r\n      <el-col :span=\"8\">\r\n        <el-select v-model=\"department\" placeholder=\"部門を選択してください\" clearable>\r\n          <el-option label=\"営業\" value=\"営業\"></el-option>\r\n          <el-option label=\"開発\" value=\"開発\"></el-option>\r\n          <el-option label=\"経理\" value=\"経理\"></el-option>\r\n        </el-select>\r\n      </el-col>\r\n    </el-row>\r\n\r\n    <!-- 会社名選択 -->\r\n    <el-row style=\"margin-bottom: 20px;\">\r\n      <el-col :span=\"8\">\r\n        <el-input v-model=\"companyName\" placeholder=\"会社をご入力ください。\" clearable></el-input>\r\n      </el-col>\r\n      <el-col :span=\"2\">\r\n        <el-button icon=\"el-icon-search\" @click=\"showDialog\">選択</el-button>\r\n      </el-col>\r\n      <el-col :span=\"4\">\r\n        <el-input v-model=\"companyId\" :disabled=\"true\"></el-input>\r\n      </el-col>\r\n    </el-row>\r\n\r\n    <!-- メールアドレス入力 -->\r\n    <el-row style=\"margin-bottom: 20px;\">\r\n      <el-col :span=\"8\">\r\n        <el-input v-model=\"email\" placeholder=\"メールアドレスをご入力ください。\" clearable></el-input>\r\n      </el-col>\r\n    </el-row>\r\n\r\n    <!-- 提交ボタン -->\r\n    <el-row>\r\n      <el-col :span=\"8\">\r\n        <el-button type=\"primary\" @click=\"registerEmployee\">保存</el-button>\r\n        <el-button type=\"default\" @click=\"resetForm\">キャンセル</el-button>\r\n      </el-col>\r\n    </el-row>\r\n\r\n    <!-- 使用通用弹窗 -->\r\n    <CommonSearchDialog\r\n      :visible.sync=\"dialogVisible\"\r\n      :title=\"'会社選択画面'\"\r\n      :tableData=\"dialogData\"\r\n      :columns=\"dialogColumns\"\r\n      :filters=\"dialogFilters\"\r\n      @select-company=\"handleSelectCompany\" \r\n    />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nimport CommonSearchDialog from \"@/components/CommonSearchDialog.vue\";\r\n\r\nexport default {\r\n  name: \"EmployeeRegisterView\",\r\n  components: { CommonSearchDialog },\r\n  data() {\r\n    return {\r\n      employeeName: \"\",\r\n      department: \"\",\r\n      companyName: \"\",\r\n      companyId: \"\",\r\n      email: \"\",\r\n      dialogVisible: false,\r\n      //会社選択画面の明細データ\r\n      dialogData: [],\r\n      \r\n      //会社選択画面の明細項目定義\r\n      dialogColumns: [\r\n        { prop: \"id\", label: \"ID\", width: \"100\" },\r\n        { prop: \"name\", label: \"名前\" , width: \"220\"},\r\n        { prop: \"department\", label: \"部門\" , width: \"220\"},\r\n      ],\r\n\r\n      //検索条件\r\n      dialogFilters: [\r\n        {\r\n          prop: \"name\",\r\n          label: \"名前\",\r\n          type: \"el-input\",\r\n          width: 300,\r\n          props: { placeholder: \"名前を入力してください\", clearable: true },\r\n        },\r\n        {\r\n          prop: \"department\",\r\n          label: \"部門\",\r\n          type: \"el-select\",\r\n          width: 300,\r\n          props: {\r\n            placeholder: \"部門を選択してください\",\r\n            clearable: true,\r\n            options: [\r\n              { label: \"営業\", value: \"営業\" },\r\n              { label: \"開発\", value: \"開発\" },\r\n              { label: \"経理\", value: \"経理\" },\r\n            ],\r\n          },\r\n        },\r\n      ],\r\n    };\r\n  },\r\n  methods: {\r\n    showDialog() {\r\n      this.dialogVisible = true;\r\n    },\r\n    handleSelectCompany(selectedCompany) {\r\n      this.companyName = selectedCompany.name;\r\n      this.companyId = selectedCompany.id;\r\n    },\r\n    async registerEmployee() {\r\n      try {\r\n        // const response = \r\n        await axios.post('/employee/register', {\r\n          employeeName: this.employeeName,\r\n          department: this.department,\r\n          companyName: this.companyName,\r\n          companyId: this.companyId,\r\n          email: this.email,\r\n        });\r\n        this.$message.success('登録が成功しました');\r\n        this.resetForm();\r\n      } catch (error) {\r\n        this.$message.error('登録に失敗しました: ' + error);\r\n      }\r\n    },\r\n    resetForm() {\r\n      this.employeeName = \"\";\r\n      this.department = \"\";\r\n      this.companyName = \"\";\r\n      this.companyId = \"\";\r\n      this.email = \"\";\r\n      //新規画面へ遷移する\r\n      this.$router.push('/employee'); \r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.el-input, .el-select {\r\n  margin-bottom: 20px;\r\n}\r\n</style>\r\n"],"mappings":";AA8DA,OAAAA,KAAA;AACA,OAAAC,kBAAA;AAEA;EACAC,IAAA;EACAC,UAAA;IAAAF;EAAA;EACAG,KAAA;IACA;MACAC,YAAA;MACAC,UAAA;MACAC,WAAA;MACAC,SAAA;MACAC,KAAA;MACAC,aAAA;MACA;MACAC,UAAA;MAEA;MACAC,aAAA,GACA;QAAAC,IAAA;QAAAC,KAAA;QAAAC,KAAA;MAAA,GACA;QAAAF,IAAA;QAAAC,KAAA;QAAAC,KAAA;MAAA,GACA;QAAAF,IAAA;QAAAC,KAAA;QAAAC,KAAA;MAAA,EACA;MAEA;MACAC,aAAA,GACA;QACAH,IAAA;QACAC,KAAA;QACAG,IAAA;QACAF,KAAA;QACAG,KAAA;UAAAC,WAAA;UAAAC,SAAA;QAAA;MACA,GACA;QACAP,IAAA;QACAC,KAAA;QACAG,IAAA;QACAF,KAAA;QACAG,KAAA;UACAC,WAAA;UACAC,SAAA;UACAC,OAAA,GACA;YAAAP,KAAA;YAAAQ,KAAA;UAAA,GACA;YAAAR,KAAA;YAAAQ,KAAA;UAAA,GACA;YAAAR,KAAA;YAAAQ,KAAA;UAAA;QAEA;MACA;IAEA;EACA;EACAC,OAAA;IACAC,WAAA;MACA,KAAAd,aAAA;IACA;IACAe,oBAAAC,eAAA;MACA,KAAAnB,WAAA,GAAAmB,eAAA,CAAAxB,IAAA;MACA,KAAAM,SAAA,GAAAkB,eAAA,CAAAC,EAAA;IACA;IACA,MAAAC,iBAAA;MACA;QACA;QACA,MAAA5B,KAAA,CAAA6B,IAAA;UACAxB,YAAA,OAAAA,YAAA;UACAC,UAAA,OAAAA,UAAA;UACAC,WAAA,OAAAA,WAAA;UACAC,SAAA,OAAAA,SAAA;UACAC,KAAA,OAAAA;QACA;QACA,KAAAqB,QAAA,CAAAC,OAAA;QACA,KAAAC,SAAA;MACA,SAAAC,KAAA;QACA,KAAAH,QAAA,CAAAG,KAAA,iBAAAA,KAAA;MACA;IACA;IACAD,UAAA;MACA,KAAA3B,YAAA;MACA,KAAAC,UAAA;MACA,KAAAC,WAAA;MACA,KAAAC,SAAA;MACA,KAAAC,KAAA;MACA;MACA,KAAAyB,OAAA,CAAAC,IAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}