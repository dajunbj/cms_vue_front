{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  name: \"LoginView\",\n  data() {\n    return {\n      username: \"\",\n      // 响应式数据\n      password: \"\"\n    };\n  },\n  methods: {\n    handleLogin() {\n      if (this.username && this.password) {\n        axios.post(\"http://localhost:8080/auth/login\", {\n          username: this.username,\n          password: this.password\n        }).then(response => {\n          const token = response.data.token;\n          sessionStorage.setItem(\"token\", token);\n          this.$router.push(\"/home\"); // 跳转到首页\n        }).catch(error => {\n          alert(\"请输入用户名和密码\");\n        });\n      } else {\n        alert(\"请输入用户名和密码\");\n      }\n    },\n    setLoginToken() {\n      //不正ログイン防止のトークン\n      const token = \"mytoken\";\n      sessionStorage.setItem(\"token\", token);\n      const tokenExpirationTime = new Date().getTime() + 60000; // 1 小时有效期\n      sessionStorage.setItem(\"tokenExpiration\", tokenExpirationTime);\n    }\n  }\n};","map":{"version":3,"names":["name","data","username","password","methods","handleLogin","axios","post","then","response","token","sessionStorage","setItem","$router","push","catch","error","alert","setLoginToken","tokenExpirationTime","Date","getTime"],"sources":["src/views/LoginView.vue"],"sourcesContent":["<template>\r\n    <div class=\"login-container\">\r\n      <h2>登录</h2>\r\n      <el-form class=\"login-form\" @submit.native.prevent>\r\n        <el-form-item label=\"用户名\">\r\n          <el-input v-model=\"username\" placeholder=\"请输入用户名\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"密码\">\r\n          <el-input v-model=\"password\" type=\"password\" placeholder=\"请输入密码\" />\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <el-button type=\"primary\" @click=\"handleLogin\" style=\"width: 100%;\">登录</el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  export default {\r\n    name: \"LoginView\",\r\n    data() {\r\n      return {\r\n        username: \"\", // 响应式数据\r\n        password: \"\",\r\n      };\r\n    },\r\n    methods: {\r\n      handleLogin() {\r\n        if (this.username && this.password) {\r\n            axios.post(\"http://localhost:8080/auth/login\", {\r\n            username: this.username,\r\n            password: this.password,\r\n            }).then((response) => {\r\n                const token = response.data.token;\r\n                sessionStorage.setItem(\"token\", token);\r\n                this.$router.push(\"/home\"); // 跳转到首页\r\n            }).catch((error) => {\r\n                alert(\"请输入用户名和密码\");\r\n            });\r\n        } else {\r\n            alert(\"请输入用户名和密码\");\r\n        }\r\n      },\r\n      setLoginToken(){\r\n          //不正ログイン防止のトークン\r\n          const token = \"mytoken\";\r\n          sessionStorage.setItem(\"token\",token);\r\n          \r\n          const tokenExpirationTime = new Date().getTime() + 60000; // 1 小时有效期\r\n          sessionStorage.setItem(\"tokenExpiration\", tokenExpirationTime);\r\n      },\r\n    },\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .login-container {\r\n    width: 300px;\r\n    margin: 100px auto;\r\n    padding: 20px;\r\n    background: #fff;\r\n    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);\r\n    border-radius: 5px;\r\n  }\r\n  h2 {\r\n    text-align: center;\r\n  }\r\n  </style>\r\n  "],"mappings":";AAkBA;EACAA,IAAA;EACAC,KAAA;IACA;MACAC,QAAA;MAAA;MACAC,QAAA;IACA;EACA;EACAC,OAAA;IACAC,YAAA;MACA,SAAAH,QAAA,SAAAC,QAAA;QACAG,KAAA,CAAAC,IAAA;UACAL,QAAA,OAAAA,QAAA;UACAC,QAAA,OAAAA;QACA,GAAAK,IAAA,CAAAC,QAAA;UACA,MAAAC,KAAA,GAAAD,QAAA,CAAAR,IAAA,CAAAS,KAAA;UACAC,cAAA,CAAAC,OAAA,UAAAF,KAAA;UACA,KAAAG,OAAA,CAAAC,IAAA;QACA,GAAAC,KAAA,CAAAC,KAAA;UACAC,KAAA;QACA;MACA;QACAA,KAAA;MACA;IACA;IACAC,cAAA;MACA;MACA,MAAAR,KAAA;MACAC,cAAA,CAAAC,OAAA,UAAAF,KAAA;MAEA,MAAAS,mBAAA,OAAAC,IAAA,GAAAC,OAAA;MACAV,cAAA,CAAAC,OAAA,oBAAAO,mBAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}