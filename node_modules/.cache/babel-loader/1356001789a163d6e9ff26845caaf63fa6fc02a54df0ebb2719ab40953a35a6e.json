{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from \"axios\";\nexport default {\n  name: \"EmployeeDetailView\",\n  data() {\n    return {\n      form: {\n        employeeId: \"\",\n        name: \"\",\n        sex: \"\",\n        birthday: \"\",\n        address: \"\",\n        phone: \"\",\n        joiningDate: \"\",\n        mail: \"\",\n        jobType: \"\",\n        salary: 0\n      }\n    };\n  },\n  created() {\n    const id = this.$route.params.id; // URL から ID を取得\n    this.fetchEmployeeDetails(id);\n  },\n  methods: {\n    async fetchEmployeeDetails(id) {\n      try {\n        const response = await axios.get(`/employee/detail/${id}`);\n        this.form = response.data;\n      } catch (error) {\n        this.$message.error(\"社員情報の取得に失敗しました\");\n      }\n    },\n    goBack() {\n      this.$router.push(\"/employee\");\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","form","employeeId","sex","birthday","address","phone","joiningDate","mail","jobType","salary","created","id","$route","params","fetchEmployeeDetails","methods","response","get","error","$message","goBack","$router","push"],"sources":["src/views/employee/EmployeeDetailView.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h2>社員情報参照画面</h2>\r\n    <el-form :model=\"form\" label-width=\"150px\">\r\n      <el-row>\r\n        <el-col :span=\"8\">\r\n          <el-form-item label=\"社員ID\">\r\n            <el-input v-model=\"form.employeeId\" readonly class=\"readonly-input\"></el-input>\r\n          </el-form-item>\r\n        </el-col>\r\n      </el-row>\r\n\r\n      <el-row>\r\n        <el-col :span=\"8\">\r\n          <el-form-item label=\"名前\">\r\n            <el-input v-model=\"form.name\" readonly class=\"readonly-input\"></el-input>\r\n          </el-form-item>\r\n        </el-col>\r\n      </el-row>\r\n\r\n      <el-row>\r\n        <el-col :span=\"8\">\r\n          <el-form-item label=\"性別\">\r\n            <el-input v-model=\"form.sex\" readonly class=\"readonly-input\"></el-input>\r\n          </el-form-item>\r\n        </el-col>\r\n      </el-row>\r\n\r\n      <el-row>\r\n        <el-col :span=\"8\">\r\n          <el-form-item label=\"生年月日\">\r\n            <el-input v-model=\"form.birthday\" readonly class=\"readonly-input\"></el-input>\r\n          </el-form-item>\r\n        </el-col>\r\n      </el-row>\r\n\r\n      <!-- Add all other fields similar to new registration -->\r\n      <el-row>\r\n        <el-col :span=\"8\">\r\n          <el-form-item label=\"住所\">\r\n            <el-input v-model=\"form.address\" readonly class=\"readonly-input\"></el-input>\r\n          </el-form-item>\r\n        </el-col>\r\n      </el-row>\r\n\r\n      <el-row>\r\n        <el-col :span=\"8\">\r\n          <el-form-item label=\"携帯\">\r\n            <el-input v-model=\"form.phone\" readonly class=\"readonly-input\"></el-input>\r\n          </el-form-item>\r\n        </el-col>\r\n      </el-row>\r\n\r\n      <el-row>\r\n        <el-col :span=\"8\">\r\n          <el-form-item label=\"入社年月日\">\r\n            <el-input v-model=\"form.joiningDate\" readonly class=\"readonly-input\"></el-input>\r\n          </el-form-item>\r\n        </el-col>\r\n      </el-row>\r\n\r\n      <el-row>\r\n        <el-col :span=\"8\">\r\n          <el-form-item label=\"メール\">\r\n            <el-input v-model=\"form.mail\" readonly class=\"readonly-input\"></el-input>\r\n          </el-form-item>\r\n        </el-col>\r\n      </el-row>\r\n\r\n      <el-row>\r\n        <el-col :span=\"8\">\r\n          <el-form-item label=\"職種\">\r\n            <el-input v-model=\"form.jobType\" readonly class=\"readonly-input\"></el-input>\r\n          </el-form-item>\r\n        </el-col>\r\n      </el-row>\r\n\r\n      <el-row>\r\n        <el-col :span=\"8\">\r\n          <el-form-item label=\"給料\">\r\n            <el-input v-model=\"form.salary\" readonly class=\"readonly-input\"></el-input>\r\n          </el-form-item>\r\n        </el-col>\r\n      </el-row>\r\n\r\n      <!-- ボタン -->\r\n      <el-row>\r\n        <el-col :span=\"8\">\r\n          <el-button type=\"default\" @click=\"goBack\">戻る</el-button>\r\n        </el-col>\r\n      </el-row>\r\n    </el-form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  name: \"EmployeeDetailView\",\r\n  data() {\r\n    return {\r\n      form: {\r\n        employeeId: \"\",\r\n        name: \"\",\r\n        sex: \"\",\r\n        birthday: \"\",\r\n        address: \"\",\r\n        phone: \"\",\r\n        joiningDate: \"\",\r\n        mail: \"\",\r\n        jobType: \"\",\r\n        salary: 0,\r\n      },\r\n    };\r\n  },\r\n  created() {\r\n    const id = this.$route.params.id; // URL から ID を取得\r\n    this.fetchEmployeeDetails(id);\r\n  },\r\n  methods: {\r\n    async fetchEmployeeDetails(id) {\r\n      try {\r\n        const response = await axios.get(`/employee/detail/${id}`);\r\n        this.form = response.data;\r\n      } catch (error) {\r\n        this.$message.error(\"社員情報の取得に失敗しました\");\r\n      }\r\n    },\r\n    goBack() {\r\n      this.$router.push(\"/employee\");\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* 修改 readonly 输入框的样式 */\r\n.readonly-input .el-input__inner {\r\n  background-color: #704a4a; /* 背景颜色为灰色，表示不可编辑 */\r\n  color: #999; /* 字体颜色 */\r\n  border-color: #dcdfe6; /* 边框颜色 */\r\n  cursor: not-allowed; /* 鼠标指针显示为不可操作 */\r\n}\r\n\r\n/* 调整 el-row 和 el-form-item 的间距 */\r\n.compact-form .el-row {\r\n  margin-bottom: 8px; /* 行间距设置为 8px */\r\n}\r\n\r\n.compact-form .el-form-item {\r\n  margin-bottom: 8px; /* 表单项间距设置为 8px */\r\n}\r\n</style>"],"mappings":";AAgGA,OAAAA,KAAA;AAEA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,IAAA;QACAC,UAAA;QACAH,IAAA;QACAI,GAAA;QACAC,QAAA;QACAC,OAAA;QACAC,KAAA;QACAC,WAAA;QACAC,IAAA;QACAC,OAAA;QACAC,MAAA;MACA;IACA;EACA;EACAC,QAAA;IACA,MAAAC,EAAA,QAAAC,MAAA,CAAAC,MAAA,CAAAF,EAAA;IACA,KAAAG,oBAAA,CAAAH,EAAA;EACA;EACAI,OAAA;IACA,MAAAD,qBAAAH,EAAA;MACA;QACA,MAAAK,QAAA,SAAAnB,KAAA,CAAAoB,GAAA,qBAAAN,EAAA;QACA,KAAAX,IAAA,GAAAgB,QAAA,CAAAjB,IAAA;MACA,SAAAmB,KAAA;QACA,KAAAC,QAAA,CAAAD,KAAA;MACA;IACA;IACAE,OAAA;MACA,KAAAC,OAAA,CAAAC,IAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}