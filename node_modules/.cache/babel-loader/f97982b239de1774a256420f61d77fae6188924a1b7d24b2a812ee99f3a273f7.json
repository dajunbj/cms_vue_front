{"ast":null,"code":"import \"core-js/modules/esnext.iterator.map.js\";\nimport axios from 'axios';\nimport CommonSearchDialog from \"@/components/CommonSearchDialog.vue\";\nimport { deleteAllSelected } from \"@/js/ListView.js\";\nexport default {\n  name: \"EmployeeListView\",\n  components: {\n    CommonSearchDialog\n  },\n  data() {\n    return {\n      searchName: \"\",\n      dialogVisible: false,\n      dialogData: [{\n        id: \"1\",\n        name: \"山田太郎\",\n        department: \"営業\"\n      }, {\n        id: \"2\",\n        name: \"鈴木花子\",\n        department: \"開発\"\n      }, {\n        id: \"3\",\n        name: \"田中一郎\",\n        department: \"経理\"\n      }],\n      dialogColumns: [{\n        prop: \"id\",\n        label: \"ID\",\n        width: \"80\"\n      }, {\n        prop: \"name\",\n        label: \"名前\"\n      }, {\n        prop: \"department\",\n        label: \"部門\"\n      }],\n      dialogFilters: [{\n        prop: \"name\",\n        label: \"名前\",\n        type: \"el-input\",\n        props: {\n          placeholder: \"名前を入力してください\",\n          clearable: true\n        }\n      }, {\n        prop: \"department\",\n        label: \"部門\",\n        type: \"el-select\",\n        props: {\n          placeholder: \"部門を選択してください\",\n          clearable: true,\n          options: [{\n            label: \"営業\",\n            value: \"営業\"\n          }, {\n            label: \"開発\",\n            value: \"開発\"\n          }, {\n            label: \"経理\",\n            value: \"経理\"\n          }]\n        }\n      }],\n      employeeData: [],\n      filteredEmployees: []\n    };\n  },\n  methods: {\n    deleteAllSelected,\n    showDialog() {\n      this.dialogVisible = true;\n    },\n    async findEmployees() {\n      try {\n        const response = await axios.get('/employee/search', {\n          params: {\n            name: this.searchName\n          }\n        });\n        this.filteredEmployees = response.data;\n      } catch (error) {\n        this.$message.error('データの取得に失敗しました' + error);\n      }\n    },\n    clickReference(row) {\n      alert(JSON.stringify(row));\n    },\n    clickEdit(row) {\n      alert(JSON.stringify(row));\n    },\n    handleSelectionChange(val) {\n      this.multipleSelection = val.map(item => item.id);\n    }\n  },\n  mounted() {\n    this.filteredEmployees = this.employeeData;\n  }\n};","map":{"version":3,"names":["axios","CommonSearchDialog","deleteAllSelected","name","components","data","searchName","dialogVisible","dialogData","id","department","dialogColumns","prop","label","width","dialogFilters","type","props","placeholder","clearable","options","value","employeeData","filteredEmployees","methods","showDialog","findEmployees","response","get","params","error","$message","clickReference","row","alert","JSON","stringify","clickEdit","handleSelectionChange","val","multipleSelection","map","item","mounted"],"sources":["src/views/EmployeeListView.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h2>社員一覧画面</h2>\r\n    <el-row>\r\n      <el-col :span=\"8\">\r\n        <el-input v-model=\"searchName\" placeholder=\"社員名をご入力ください。\" clearable></el-input>\r\n      </el-col>\r\n    </el-row>\r\n\r\n    <el-row>\r\n      <el-col :span=\"12\">\r\n        <el-input v-model=\"companyId\" placeholder=\"社員名をご入力ください。\" clearable></el-input>\r\n        <el-button icon=\"el-icon-search\" @click=\"showDialog\">選択</el-button>\r\n      </el-col>\r\n    </el-row>\r\n\r\n    <el-row>\r\n      <el-col :span=\"12\">\r\n        <el-button icon=\"el-icon-search\" @click=\"findEmployees\" type=\"primary\">検索</el-button>\r\n        <el-button icon=\"el-icon-user-solid\" @click=\"findEmployees\" type=\"primary\">新規</el-button>\r\n        <el-button icon=\"el-icon-user-solid\" @click=\"deleteAllSelected('/employee/deleteAll')\" type=\"primary\">全削除</el-button>\r\n      </el-col>\r\n    </el-row>\r\n\r\n    <el-table :data=\"filteredEmployees\" border style=\"width: 850px;margin-top: 10px;\" height=\"250px\"\r\n              @selection-change=\"handleSelectionChange\">\r\n      <el-table-column type=\"selection\" width=\"55\" align=\"center\"></el-table-column>\r\n      <el-table-column fixed prop=\"id\" label=\"ID\" width=\"80\" header-align=\"center\"></el-table-column>\r\n      <el-table-column prop=\"name\" label=\"名前\" header-align=\"center\"></el-table-column>\r\n      <el-table-column prop=\"email\" label=\"メール\" header-align=\"center\"></el-table-column>\r\n      <el-table-column prop=\"department\" label=\"部門\" header-align=\"center\"></el-table-column>\r\n      <el-table-column fixed=\"right\" label=\"動作\" width=\"100\" align=\"center\">\r\n        <template slot-scope=\"scope\">\r\n          <el-button @click=\"clickReference(scope.row)\" type=\"text\" size=\"small\">参照</el-button>\r\n          <el-button @click=\"clickEdit(scope.row)\" type=\"text\" size=\"small\">編集</el-button>\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n\r\n    <!-- 使用通用弹窗 -->\r\n    <CommonSearchDialog\r\n      :visible.sync=\"dialogVisible\"\r\n      :title=\"'社員選択画面'\"\r\n      :tableData=\"dialogData\"\r\n      :columns=\"dialogColumns\"\r\n      :filters=\"dialogFilters\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nimport CommonSearchDialog from \"@/components/CommonSearchDialog.vue\";\r\nimport {deleteAllSelected} from \"@/js/ListView.js\";\r\n\r\nexport default {\r\n  name: \"EmployeeListView\",\r\n  components: { CommonSearchDialog },\r\n  data() {\r\n    return {\r\n      searchName: \"\",\r\n      dialogVisible: false,\r\n      dialogData: [\r\n        { id: \"1\", name: \"山田太郎\", department: \"営業\" },\r\n        { id: \"2\", name: \"鈴木花子\", department: \"開発\" },\r\n        { id: \"3\", name: \"田中一郎\", department: \"経理\" },\r\n      ],\r\n      dialogColumns: [\r\n        { prop: \"id\", label: \"ID\", width: \"80\" },\r\n        { prop: \"name\", label: \"名前\" },\r\n        { prop: \"department\", label: \"部門\" },\r\n      ],\r\n      dialogFilters: [\r\n  {\r\n    prop: \"name\",\r\n    label: \"名前\",\r\n    type: \"el-input\",\r\n    props: { placeholder: \"名前を入力してください\", clearable: true },\r\n  },\r\n  {\r\n    prop: \"department\",\r\n    label: \"部門\",\r\n    type: \"el-select\",\r\n    props: {\r\n      placeholder: \"部門を選択してください\",\r\n      clearable: true,\r\n      options: [\r\n        { label: \"営業\", value: \"営業\" },\r\n        { label: \"開発\", value: \"開発\" },\r\n        { label: \"経理\", value: \"経理\" },\r\n      ],\r\n    },\r\n  },\r\n],\r\n      employeeData: [],\r\n      filteredEmployees: [],\r\n    };\r\n  },\r\n  methods: {\r\n    deleteAllSelected,\r\n    showDialog() {\r\n      this.dialogVisible = true;\r\n    },\r\n    async findEmployees() {\r\n      try {\r\n        const response = await axios.get('/employee/search', { params: { name: this.searchName } });\r\n        this.filteredEmployees = response.data;\r\n      } catch (error) {\r\n        this.$message.error('データの取得に失敗しました' + error);\r\n      }\r\n    },\r\n    clickReference(row) {\r\n      alert(JSON.stringify(row));\r\n    },\r\n    clickEdit(row) {\r\n      alert(JSON.stringify(row));\r\n    },\r\n    handleSelectionChange(val) {\r\n      this.multipleSelection = val.map(item => item.id);\r\n    },\r\n  },\r\n  mounted() {\r\n    this.filteredEmployees = this.employeeData;\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.el-input {\r\n  margin-bottom: 20px;\r\n}\r\n</style>\r\n"],"mappings":";AAmDA,OAAAA,KAAA;AACA,OAAAC,kBAAA;AACA,SAAAC,iBAAA;AAEA;EACAC,IAAA;EACAC,UAAA;IAAAH;EAAA;EACAI,KAAA;IACA;MACAC,UAAA;MACAC,aAAA;MACAC,UAAA,GACA;QAAAC,EAAA;QAAAN,IAAA;QAAAO,UAAA;MAAA,GACA;QAAAD,EAAA;QAAAN,IAAA;QAAAO,UAAA;MAAA,GACA;QAAAD,EAAA;QAAAN,IAAA;QAAAO,UAAA;MAAA,EACA;MACAC,aAAA,GACA;QAAAC,IAAA;QAAAC,KAAA;QAAAC,KAAA;MAAA,GACA;QAAAF,IAAA;QAAAC,KAAA;MAAA,GACA;QAAAD,IAAA;QAAAC,KAAA;MAAA,EACA;MACAE,aAAA,GACA;QACAH,IAAA;QACAC,KAAA;QACAG,IAAA;QACAC,KAAA;UAAAC,WAAA;UAAAC,SAAA;QAAA;MACA,GACA;QACAP,IAAA;QACAC,KAAA;QACAG,IAAA;QACAC,KAAA;UACAC,WAAA;UACAC,SAAA;UACAC,OAAA,GACA;YAAAP,KAAA;YAAAQ,KAAA;UAAA,GACA;YAAAR,KAAA;YAAAQ,KAAA;UAAA,GACA;YAAAR,KAAA;YAAAQ,KAAA;UAAA;QAEA;MACA,EACA;MACAC,YAAA;MACAC,iBAAA;IACA;EACA;EACAC,OAAA;IACAtB,iBAAA;IACAuB,WAAA;MACA,KAAAlB,aAAA;IACA;IACA,MAAAmB,cAAA;MACA;QACA,MAAAC,QAAA,SAAA3B,KAAA,CAAA4B,GAAA;UAAAC,MAAA;YAAA1B,IAAA,OAAAG;UAAA;QAAA;QACA,KAAAiB,iBAAA,GAAAI,QAAA,CAAAtB,IAAA;MACA,SAAAyB,KAAA;QACA,KAAAC,QAAA,CAAAD,KAAA,mBAAAA,KAAA;MACA;IACA;IACAE,eAAAC,GAAA;MACAC,KAAA,CAAAC,IAAA,CAAAC,SAAA,CAAAH,GAAA;IACA;IACAI,UAAAJ,GAAA;MACAC,KAAA,CAAAC,IAAA,CAAAC,SAAA,CAAAH,GAAA;IACA;IACAK,sBAAAC,GAAA;MACA,KAAAC,iBAAA,GAAAD,GAAA,CAAAE,GAAA,CAAAC,IAAA,IAAAA,IAAA,CAAAjC,EAAA;IACA;EACA;EACAkC,QAAA;IACA,KAAApB,iBAAA,QAAAD,YAAA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}