{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from \"axios\";\nexport default {\n  name: \"EmployeeEditView\",\n  data() {\n    return {\n      form: {\n        employeeId: \"\",\n        name: \"\",\n        sex: \"\",\n        birthday: \"\",\n        address: \"\",\n        phone: \"\",\n        joiningDate: \"\",\n        mail: \"\",\n        jobType: \"\",\n        salary: 0\n      },\n      rules: {\n        name: [{\n          required: true,\n          message: \"名前を入力してください\",\n          trigger: \"blur\"\n        }]\n        // Add other validation rules\n      }\n    };\n  },\n  created() {\n    const id = this.$route.params.id; // URL から ID を取得\n    this.fetchEmployeeDetails(id);\n  },\n  methods: {\n    async fetchEmployeeDetails(id) {\n      try {\n        const response = await axios.get(`/employee/detail/${id}`);\n        this.form = response.data;\n      } catch (error) {\n        this.$message.error(\"社員情報の取得に失敗しました\");\n      }\n    },\n    async submitForm() {\n      this.$refs.employeeForm.validate(async valid => {\n        if (valid) {\n          try {\n            await axios.put(`/employee/update`, this.form);\n            this.$message.success(\"更新が成功しました\");\n            this.$router.push(\"/employee\");\n          } catch (error) {\n            this.$message.error(\"更新に失敗しました: \" + error.message);\n          }\n        }\n      });\n    },\n    goBack() {\n      this.$router.push(\"/employee\");\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","form","employeeId","sex","birthday","address","phone","joiningDate","mail","jobType","salary","rules","required","message","trigger","created","id","$route","params","fetchEmployeeDetails","methods","response","get","error","$message","submitForm","$refs","employeeForm","validate","valid","put","success","$router","push","goBack"],"sources":["src/views/employee/EmployeeEditView.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h2>社員情報編集画面</h2>\r\n    <el-form :model=\"form\" :rules=\"rules\" ref=\"employeeForm\" label-width=\"150px\">\r\n      <el-row>\r\n        <el-col :span=\"8\">\r\n          <el-form-item label=\"社員ID\" prop=\"employeeId\">\r\n            <el-input v-model=\"form.employeeId\" readonly></el-input>\r\n          </el-form-item>\r\n        </el-col>\r\n      </el-row>\r\n\r\n      <el-row>\r\n        <el-col :span=\"8\">\r\n          <el-form-item label=\"名前\" prop=\"name\">\r\n            <el-input v-model=\"form.name\" placeholder=\"名前をご入力ください。\" clearable></el-input>\r\n          </el-form-item>\r\n        </el-col>\r\n      </el-row>\r\n\r\n      <!-- Add all other fields -->\r\n      <el-row>\r\n        <el-col :span=\"8\">\r\n          <el-form-item label=\"性別\" prop=\"sex\">\r\n            <el-radio-group v-model=\"form.sex\">\r\n              <el-radio label=\"1\">男性</el-radio>\r\n              <el-radio label=\"2\">女性</el-radio>\r\n            </el-radio-group>\r\n          </el-form-item>\r\n        </el-col>\r\n      </el-row>\r\n\r\n      <el-row>\r\n        <el-col :span=\"8\">\r\n          <el-form-item label=\"生年月日\" prop=\"birthday\">\r\n            <el-date-picker v-model=\"form.birthday\" type=\"date\" placeholder=\"生年月日を選択してください\"></el-date-picker>\r\n          </el-form-item>\r\n        </el-col>\r\n      </el-row>\r\n\r\n      <el-row>\r\n        <el-col :span=\"8\">\r\n          <el-form-item label=\"住所\" prop=\"address\">\r\n            <el-input v-model=\"form.address\" placeholder=\"住所をご入力ください。\" clearable></el-input>\r\n          </el-form-item>\r\n        </el-col>\r\n      </el-row>\r\n\r\n      <el-row>\r\n        <el-col :span=\"8\">\r\n          <el-form-item label=\"携帯\" prop=\"phone\">\r\n            <el-input v-model=\"form.phone\" placeholder=\"携帯をご入力ください。\" clearable></el-input>\r\n          </el-form-item>\r\n        </el-col>\r\n      </el-row>\r\n\r\n      <el-row>\r\n        <el-col :span=\"8\">\r\n          <el-form-item label=\"入社年月日\" prop=\"joiningDate\">\r\n            <el-date-picker v-model=\"form.joiningDate\" type=\"date\" placeholder=\"入社年月日を選択してください\"></el-date-picker>\r\n          </el-form-item>\r\n        </el-col>\r\n      </el-row>\r\n\r\n      <el-row>\r\n        <el-col :span=\"8\">\r\n          <el-form-item label=\"メール\" prop=\"mail\">\r\n            <el-input v-model=\"form.mail\" placeholder=\"メールをご入力ください。\" clearable></el-input>\r\n          </el-form-item>\r\n        </el-col>\r\n      </el-row>\r\n\r\n      <el-row>\r\n        <el-col :span=\"8\">\r\n          <el-form-item label=\"職種\" prop=\"jobType\">\r\n            <el-select v-model=\"form.jobType\" placeholder=\"職種を選択してください\" clearable>\r\n              <el-option label=\"営業\" value=\"営業\"></el-option>\r\n              <el-option label=\"開発\" value=\"開発\"></el-option>\r\n              <el-option label=\"経理\" value=\"経理\"></el-option>\r\n            </el-select>\r\n          </el-form-item>\r\n        </el-col>\r\n      </el-row>\r\n\r\n      <el-row>\r\n        <el-col :span=\"8\">\r\n          <el-form-item label=\"給料\" prop=\"salary\">\r\n            <el-input-number v-model=\"form.salary\" placeholder=\"給料をご入力ください\" :min=\"0\" :max=\"1000000\"></el-input-number>\r\n          </el-form-item>\r\n        </el-col>\r\n      </el-row>\r\n\r\n      <el-row>\r\n        <el-col :span=\"8\">\r\n          <el-button type=\"primary\" @click=\"submitForm\">保存</el-button>\r\n          <el-button type=\"default\" @click=\"goBack\">キャンセル</el-button>\r\n        </el-col>\r\n      </el-row>\r\n    </el-form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  name: \"EmployeeEditView\",\r\n  data() {\r\n    return {\r\n      form: {\r\n        employeeId: \"\",\r\n        name: \"\",\r\n        sex: \"\",\r\n        birthday: \"\",\r\n        address: \"\",\r\n        phone: \"\",\r\n        joiningDate: \"\",\r\n        mail: \"\",\r\n        jobType: \"\",\r\n        salary: 0,\r\n      },\r\n      rules: {\r\n        name: [{ required: true, message: \"名前を入力してください\", trigger: \"blur\" }],\r\n        // Add other validation rules\r\n      },\r\n    };\r\n  },\r\n  created() {\r\n    const id = this.$route.params.id; // URL から ID を取得\r\n    this.fetchEmployeeDetails(id);\r\n  },\r\n  methods: {\r\n    async fetchEmployeeDetails(id) {\r\n      try {\r\n        const response = await axios.get(`/employee/detail/${id}`);\r\n        this.form = response.data;\r\n      } catch (error) {\r\n        this.$message.error(\"社員情報の取得に失敗しました\");\r\n      }\r\n    },\r\n    async submitForm() {\r\n      this.$refs.employeeForm.validate(async (valid) => {\r\n        if (valid) {\r\n          try {\r\n            await axios.put(`/employee/update`, this.form);\r\n            this.$message.success(\"更新が成功しました\");\r\n            this.$router.push(\"/employee\");\r\n          } catch (error) {\r\n            this.$message.error(\"更新に失敗しました: \" + error.message);\r\n          }\r\n        }\r\n      });\r\n    },\r\n    goBack() {\r\n      this.$router.push(\"/employee\");\r\n    },\r\n  },\r\n};\r\n</script>\r\n"],"mappings":";AAuGA,OAAAA,KAAA;AAEA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,IAAA;QACAC,UAAA;QACAH,IAAA;QACAI,GAAA;QACAC,QAAA;QACAC,OAAA;QACAC,KAAA;QACAC,WAAA;QACAC,IAAA;QACAC,OAAA;QACAC,MAAA;MACA;MACAC,KAAA;QACAZ,IAAA;UAAAa,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA;QACA;MACA;IACA;EACA;EACAC,QAAA;IACA,MAAAC,EAAA,QAAAC,MAAA,CAAAC,MAAA,CAAAF,EAAA;IACA,KAAAG,oBAAA,CAAAH,EAAA;EACA;EACAI,OAAA;IACA,MAAAD,qBAAAH,EAAA;MACA;QACA,MAAAK,QAAA,SAAAvB,KAAA,CAAAwB,GAAA,qBAAAN,EAAA;QACA,KAAAf,IAAA,GAAAoB,QAAA,CAAArB,IAAA;MACA,SAAAuB,KAAA;QACA,KAAAC,QAAA,CAAAD,KAAA;MACA;IACA;IACA,MAAAE,WAAA;MACA,KAAAC,KAAA,CAAAC,YAAA,CAAAC,QAAA,OAAAC,KAAA;QACA,IAAAA,KAAA;UACA;YACA,MAAA/B,KAAA,CAAAgC,GAAA,0BAAA7B,IAAA;YACA,KAAAuB,QAAA,CAAAO,OAAA;YACA,KAAAC,OAAA,CAAAC,IAAA;UACA,SAAAV,KAAA;YACA,KAAAC,QAAA,CAAAD,KAAA,iBAAAA,KAAA,CAAAV,OAAA;UACA;QACA;MACA;IACA;IACAqB,OAAA;MACA,KAAAF,OAAA,CAAAC,IAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}