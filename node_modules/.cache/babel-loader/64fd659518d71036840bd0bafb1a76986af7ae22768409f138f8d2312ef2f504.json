{"ast":null,"code":"import \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.for-each.js\";\nimport axios from \"axios\";\nexport default {\n  name: \"EmployeeRegisterView\",\n  data() {\n    return {\n      form: {\n        employeeId: \"\",\n        name: \"\",\n        sex: \"1\",\n        birthday: \"\",\n        address: \"\",\n        phone: \"\",\n        joiningDate: \"\",\n        mail: \"\",\n        jobType: \"\",\n        salary: 0\n      },\n      rules: {\n        employeeId: [{\n          required: true,\n          message: \"社員IDを入力してください\",\n          trigger: \"blur\"\n        }],\n        name: [{\n          required: true,\n          message: \"名前を入力してください\",\n          trigger: \"blur\"\n        }],\n        sex: [{\n          required: true,\n          message: \"性別を選択してください\",\n          trigger: \"change\"\n        }],\n        birthday: [{\n          required: true,\n          message: \"生年月日を選択してください\",\n          trigger: \"change\"\n        }],\n        address: [{\n          required: true,\n          message: \"住所を入力してください\",\n          trigger: \"blur\"\n        }],\n        phone: [{\n          required: true,\n          message: \"携帯を入力してください\",\n          trigger: \"blur\"\n        }],\n        joiningDate: [{\n          required: true,\n          message: \"入社年月日を選択してください\",\n          trigger: \"change\"\n        }],\n        mail: [{\n          required: true,\n          message: \"メールを入力してください\",\n          trigger: \"blur\"\n        }, {\n          type: \"email\",\n          message: \"正しいメール形式を入力してください\",\n          trigger: \"blur\"\n        }],\n        jobType: [{\n          required: true,\n          message: \"職種を選択してください\",\n          trigger: \"change\"\n        }],\n        salary: [{\n          required: true,\n          message: \"給料を入力してください\",\n          trigger: \"blur\"\n        }]\n      }\n    };\n  },\n  methods: {\n    async submitForm() {\n      this.$refs.employeeForm.validate(async valid => {\n        if (valid) {\n          try {\n            await axios.post(\"/employee/register\", this.form);\n            this.$message.success(\"登録が成功しました\");\n            this.resetForm();\n          } catch (error) {\n            this.$message.error(\"登録に失敗しました: \" + error.message);\n          }\n        } else {\n          this.$message.error(\"入力内容を確認してください\");\n        }\n      });\n    },\n    resetForm() {\n      Object.keys(this.form).forEach(key => {\n        this.form[key] = \"\";\n      });\n      this.form.salary = 0;\n      this.$refs.employeeForm.clearValidate();\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","form","employeeId","sex","birthday","address","phone","joiningDate","mail","jobType","salary","rules","required","message","trigger","type","methods","submitForm","$refs","employeeForm","validate","valid","post","$message","success","resetForm","error","Object","keys","forEach","key","clearValidate"],"sources":["src/views/employee/EmployeeRegisterView.vue"],"sourcesContent":["<template>\r\n  <div style=\"width: 100%; max-width: 1000px; overflow-x: hidden;\">\r\n    <!-- 添加标题部分 -->\r\n    <div class=\"header-container\">\r\n      <h2 class=\"header-title\">\r\n        <i class=\"el-icon-user\"></i> 社員情報登録画面\r\n      </h2>\r\n    </div>\r\n\r\n    <!-- 表单部分 -->\r\n    <div class=\"section-container\">\r\n      <el-form :model=\"form\" :rules=\"rules\" ref=\"employeeForm\" label-width=\"150px\">\r\n        <el-row :gutter=\"20\">\r\n          <el-col :span=\"12\">\r\n            <el-form-item label=\"社員ID\" prop=\"employeeId\">\r\n              <el-input v-model=\"form.employeeId\" placeholder=\"社員IDをご入力ください。\" clearable></el-input>\r\n            </el-form-item>\r\n          </el-col>\r\n          <el-col :span=\"12\">\r\n            <el-form-item label=\"名前\" prop=\"name\">\r\n              <el-input v-model=\"form.name\" placeholder=\"名前をご入力ください。\" clearable></el-input>\r\n            </el-form-item>\r\n          </el-col>\r\n        </el-row>\r\n\r\n        <el-row :gutter=\"20\">\r\n          <el-col :span=\"12\">\r\n            <el-form-item label=\"性別\" prop=\"sex\">\r\n              <el-radio-group v-model=\"form.sex\">\r\n                <el-radio label=\"1\">男性</el-radio>\r\n                <el-radio label=\"2\">女性</el-radio>\r\n              </el-radio-group>\r\n            </el-form-item>\r\n          </el-col>\r\n          <el-col :span=\"12\">\r\n            <el-form-item label=\"生年月日\" prop=\"birthday\">\r\n              <el-date-picker\r\n                v-model=\"form.birthday\"\r\n                type=\"date\"\r\n                placeholder=\"生年月日を選択してください\"\r\n                style=\"width: 100%;\"\r\n              ></el-date-picker>\r\n            </el-form-item>\r\n          </el-col>\r\n        </el-row>\r\n\r\n        <el-row :gutter=\"20\">\r\n          <el-col :span=\"12\">\r\n            <el-form-item label=\"住所\" prop=\"address\">\r\n              <el-input v-model=\"form.address\" placeholder=\"住所をご入力ください。\" clearable></el-input>\r\n            </el-form-item>\r\n          </el-col>\r\n          <el-col :span=\"12\">\r\n            <el-form-item label=\"携帯\" prop=\"phone\">\r\n              <el-input v-model=\"form.phone\" placeholder=\"携帯をご入力ください。\" clearable></el-input>\r\n            </el-form-item>\r\n          </el-col>\r\n        </el-row>\r\n\r\n        <el-row :gutter=\"20\">\r\n          <el-col :span=\"12\">\r\n            <el-form-item label=\"入社年月日\" prop=\"joiningDate\">\r\n              <el-date-picker\r\n                v-model=\"form.joiningDate\"\r\n                type=\"date\"\r\n                placeholder=\"入社年月日を選択してください\"\r\n                style=\"width: 100%;\"\r\n              ></el-date-picker>\r\n            </el-form-item>\r\n          </el-col>\r\n          <el-col :span=\"12\">\r\n            <el-form-item label=\"メール\" prop=\"mail\">\r\n              <el-input v-model=\"form.mail\" placeholder=\"メールをご入力ください。\" clearable></el-input>\r\n            </el-form-item>\r\n          </el-col>\r\n        </el-row>\r\n\r\n        <el-row :gutter=\"20\">\r\n          <el-col :span=\"12\">\r\n            <el-form-item label=\"職種\" prop=\"jobType\">\r\n              <el-select v-model=\"form.jobType\" placeholder=\"職種を選択してください\" clearable>\r\n                <el-option label=\"営業\" value=\"営業\"></el-option>\r\n                <el-option label=\"開発\" value=\"開発\"></el-option>\r\n                <el-option label=\"経理\" value=\"経理\"></el-option>\r\n              </el-select>\r\n            </el-form-item>\r\n          </el-col>\r\n          <el-col :span=\"12\">\r\n            <el-form-item label=\"給料\" prop=\"salary\">\r\n              <el-input-number v-model=\"form.salary\" placeholder=\"給料をご入力ください\" :min=\"0\" :max=\"1000000\" style=\"width: 100%;\"></el-input-number>\r\n            </el-form-item>\r\n          </el-col>\r\n        </el-row>\r\n\r\n        <el-row>\r\n          <el-col :span=\"24\" style=\"text-align: center; margin-top: 20px;\">\r\n            <el-button type=\"primary\" @click=\"submitForm\">保存</el-button>\r\n            <el-button type=\"default\" @click=\"resetForm\">キャンセル</el-button>\r\n          </el-col>\r\n        </el-row>\r\n      </el-form>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  name: \"EmployeeRegisterView\",\r\n  data() {\r\n    return {\r\n      form: {\r\n        employeeId: \"\",\r\n        name: \"\",\r\n        sex: \"1\",\r\n        birthday: \"\",\r\n        address: \"\",\r\n        phone: \"\",\r\n        joiningDate: \"\",\r\n        mail: \"\",\r\n        jobType: \"\",\r\n        salary: 0,\r\n      },\r\n      rules: {\r\n        employeeId: [\r\n          { required: true, message: \"社員IDを入力してください\", trigger: \"blur\" },\r\n        ],\r\n        name: [\r\n          { required: true, message: \"名前を入力してください\", trigger: \"blur\" },\r\n        ],\r\n        sex: [\r\n          { required: true, message: \"性別を選択してください\", trigger: \"change\" },\r\n        ],\r\n        birthday: [\r\n          { required: true, message: \"生年月日を選択してください\", trigger: \"change\" },\r\n        ],\r\n        address: [\r\n          { required: true, message: \"住所を入力してください\", trigger: \"blur\" },\r\n        ],\r\n        phone: [\r\n          { required: true, message: \"携帯を入力してください\", trigger: \"blur\" },\r\n        ],\r\n        joiningDate: [\r\n          { required: true, message: \"入社年月日を選択してください\", trigger: \"change\" },\r\n        ],\r\n        mail: [\r\n          { required: true, message: \"メールを入力してください\", trigger: \"blur\" },\r\n          { type: \"email\", message: \"正しいメール形式を入力してください\", trigger: \"blur\" },\r\n        ],\r\n        jobType: [\r\n          { required: true, message: \"職種を選択してください\", trigger: \"change\" },\r\n        ],\r\n        salary: [\r\n          { required: true, message: \"給料を入力してください\", trigger: \"blur\" },\r\n        ],\r\n      },\r\n    };\r\n  },\r\n  methods: {\r\n    async submitForm() {\r\n      this.$refs.employeeForm.validate(async (valid) => {\r\n        if (valid) {\r\n          try {\r\n            await axios.post(\"/employee/register\", this.form);\r\n            this.$message.success(\"登録が成功しました\");\r\n            this.resetForm();\r\n          } catch (error) {\r\n            this.$message.error(\"登録に失敗しました: \" + error.message);\r\n          }\r\n        } else {\r\n          this.$message.error(\"入力内容を確認してください\");\r\n        }\r\n      });\r\n    },\r\n    resetForm() {\r\n      Object.keys(this.form).forEach((key) => {\r\n        this.form[key] = \"\";\r\n      });\r\n      this.form.salary = 0;\r\n      this.$refs.employeeForm.clearValidate();\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.header-container {\r\n  padding: 15px;\r\n  margin-bottom: 20px;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n}\r\n.header-title {\r\n  margin: 0;\r\n  font-size: 24px;\r\n  font-weight: bold;\r\n  color: #333333;\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n.header-title i {\r\n  margin-right: 10px;\r\n  font-size: 28px;\r\n  color: #409EFF;\r\n}\r\n.section-container {\r\n  background-color: #FFFFFF;\r\n  padding: 15px;\r\n  margin-bottom: 20px;\r\n  border-radius: 8px;\r\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);\r\n}\r\n</style>\r\n"],"mappings":";;AA0GA,OAAAA,KAAA;AAEA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,IAAA;QACAC,UAAA;QACAH,IAAA;QACAI,GAAA;QACAC,QAAA;QACAC,OAAA;QACAC,KAAA;QACAC,WAAA;QACAC,IAAA;QACAC,OAAA;QACAC,MAAA;MACA;MACAC,KAAA;QACAT,UAAA,GACA;UAAAU,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACAf,IAAA,GACA;UAAAa,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACAX,GAAA,GACA;UAAAS,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACAV,QAAA,GACA;UAAAQ,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACAT,OAAA,GACA;UAAAO,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACAR,KAAA,GACA;UAAAM,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACAP,WAAA,GACA;UAAAK,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACAN,IAAA,GACA;UAAAI,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,GACA;UAAAC,IAAA;UAAAF,OAAA;UAAAC,OAAA;QAAA,EACA;QACAL,OAAA,GACA;UAAAG,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACAJ,MAAA,GACA;UAAAE,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA;MAEA;IACA;EACA;EACAE,OAAA;IACA,MAAAC,WAAA;MACA,KAAAC,KAAA,CAAAC,YAAA,CAAAC,QAAA,OAAAC,KAAA;QACA,IAAAA,KAAA;UACA;YACA,MAAAvB,KAAA,CAAAwB,IAAA,4BAAArB,IAAA;YACA,KAAAsB,QAAA,CAAAC,OAAA;YACA,KAAAC,SAAA;UACA,SAAAC,KAAA;YACA,KAAAH,QAAA,CAAAG,KAAA,iBAAAA,KAAA,CAAAb,OAAA;UACA;QACA;UACA,KAAAU,QAAA,CAAAG,KAAA;QACA;MACA;IACA;IACAD,UAAA;MACAE,MAAA,CAAAC,IAAA,MAAA3B,IAAA,EAAA4B,OAAA,CAAAC,GAAA;QACA,KAAA7B,IAAA,CAAA6B,GAAA;MACA;MACA,KAAA7B,IAAA,CAAAS,MAAA;MACA,KAAAQ,KAAA,CAAAC,YAAA,CAAAY,aAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}