{"ast":null,"code":"import \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nexport default {\n  name: \"UserView\",\n  data() {\n    //画面データの定義\n    return {\n      searchName: \"\",\n      // 名前\n      employeeData: [\n      //テストデータ\n      {\n        id: 1,\n        name: \"山田太郎\",\n        email: \"yamada@example.com\",\n        department: \"IT部門\"\n      }, {\n        id: 2,\n        name: \"鈴木花子\",\n        email: \"suzuki@example.com\",\n        department: \"営業部\"\n      }, {\n        id: 3,\n        name: \"田中一郎\",\n        email: \"tanaka@example.com\",\n        department: \"総務部\"\n      }],\n      //ポップアップ画面の初期データ\n      gridData: [{\n        date: '2016-05-02',\n        name: '王小虎',\n        address: '上海市普陀区金沙江路 1518 弄'\n      }, {\n        date: '2016-05-04',\n        name: '王小虎',\n        address: '上海市普陀区金沙江路 1518 弄'\n      }],\n      filteredEmployees: [] //明細データ\n    };\n  },\n  methods: {\n    //社員検索\n    findEmployees() {\n      // 名前が入力されない場合、全件検索を行う\n      if (!this.searchName.trim()) {\n        this.filteredEmployees = this.employees;\n        return;\n      }\n      // 入力名前によりデータをフィルターする\n      this.filteredEmployees = this.employees.filter(employee => employee.name.includes(this.searchName.trim()));\n\n      // 検索結果がない場合、明細をクリアする\n      if (this.filteredEmployees.length === 0) {\n        this.filteredEmployees = [];\n      }\n    }\n  },\n  mounted() {\n    //初期化処理\n    this.filteredEmployees = [];\n  }\n};","map":{"version":3,"names":["name","data","searchName","employeeData","id","email","department","gridData","date","address","filteredEmployees","methods","findEmployees","trim","employees","filter","employee","includes","length","mounted"],"sources":["src/views/UserView.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h2>社員一覧画面</h2>\r\n\r\n    <!-- 検索条件 -->\r\n    <el-row>\r\n      <el-col :span=\"5\">\r\n        <el-input v-model=\"searchName\" placeholder=\"社員名をご入力ください。\" @input=\"employeeData\" clearable>\r\n        </el-input>\r\n      </el-col>\r\n      <el-col :span=\"4\">\r\n        <el-button icon=\"el-icon-search\" @click=\"findEmployees\">検索</el-button>\r\n      </el-col>\r\n      <el-col :span=\"5\">\r\n        <el-input v-model=\"searchName\" placeholder=\"会社をご入力ください。\" clearable>\r\n        </el-input>\r\n      </el-col>\r\n      <el-col :span=\"3\">\r\n        <el-button icon=\"el-icon-search\" @click=\"dialogVisible = true\">会社選択</el-button>\r\n        <div>\r\n          <el-dialog title=\"收货地址\" :visible.sync=\"dialogVisible\">\r\n            <el-table :data=\"gridData\">\r\n              <el-table-column property=\"date\" label=\"日期\" width=\"150\"></el-table-column>\r\n              <el-table-column property=\"name\" label=\"姓名\" width=\"200\"></el-table-column>\r\n              <el-table-column property=\"address\" label=\"地址\"></el-table-column>\r\n            </el-table>\r\n          </el-dialog>\r\n        </div>\r\n      </el-col>\r\n    </el-row>\r\n\r\n    <!-- 検索結果1 -->\r\n    <el-table :data=\"filteredEmployees\" border style=\"width: 850px\" height=\"250px\">\r\n      <!--fixed:列固定 -->\r\n      <el-table-column fixed prop=\"id\" label=\"ID\" width=\"80\"></el-table-column>\r\n      <el-table-column prop=\"name\" label=\"名前\"></el-table-column>\r\n      <el-table-column prop=\"email\" label=\"メール\"></el-table-column>\r\n      <el-table-column prop=\"department\" label=\"部門\"></el-table-column>\r\n    </el-table>\r\n  </div>\r\n\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"UserView\",\r\n  data() { //画面データの定義\r\n    return {\r\n      searchName: \"\", // 名前\r\n      employeeData: [    //テストデータ\r\n        { id: 1, name: \"山田太郎\", email: \"yamada@example.com\", department: \"IT部門\" },\r\n        { id: 2, name: \"鈴木花子\", email: \"suzuki@example.com\", department: \"営業部\" },\r\n        { id: 3, name: \"田中一郎\", email: \"tanaka@example.com\", department: \"総務部\" },\r\n\r\n      ],\r\n      //ポップアップ画面の初期データ\r\n      gridData: [{\r\n          date: '2016-05-02',\r\n          name: '王小虎',\r\n          address: '上海市普陀区金沙江路 1518 弄'\r\n        }, {\r\n          date: '2016-05-04',\r\n          name: '王小虎',\r\n          address: '上海市普陀区金沙江路 1518 弄'\r\n        }],\r\n        filteredEmployees: [], //明細データ\r\n    };\r\n  },\r\n  methods: {\r\n    //社員検索\r\n    findEmployees() {\r\n      // 名前が入力されない場合、全件検索を行う\r\n      if (!this.searchName.trim()) {\r\n        this.filteredEmployees = this.employees;\r\n        return;\r\n      }\r\n      // 入力名前によりデータをフィルターする\r\n      this.filteredEmployees = this.employees.filter((employee) =>\r\n        employee.name.includes(this.searchName.trim())\r\n      );\r\n\r\n      // 検索結果がない場合、明細をクリアする\r\n      if (this.filteredEmployees.length === 0) {\r\n        this.filteredEmployees = [];\r\n      }\r\n    },\r\n  },\r\n  mounted() {//初期化処理\r\n    this.filteredEmployees = [];\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.el-input {\r\n  margin-bottom: 20px;\r\n}\r\n</style>\r\n"],"mappings":";;AA4CA;EACAA,IAAA;EACAC,KAAA;IAAA;IACA;MACAC,UAAA;MAAA;MACAC,YAAA;MAAA;MACA;QAAAC,EAAA;QAAAJ,IAAA;QAAAK,KAAA;QAAAC,UAAA;MAAA,GACA;QAAAF,EAAA;QAAAJ,IAAA;QAAAK,KAAA;QAAAC,UAAA;MAAA,GACA;QAAAF,EAAA;QAAAJ,IAAA;QAAAK,KAAA;QAAAC,UAAA;MAAA,EAEA;MACA;MACAC,QAAA;QACAC,IAAA;QACAR,IAAA;QACAS,OAAA;MACA;QACAD,IAAA;QACAR,IAAA;QACAS,OAAA;MACA;MACAC,iBAAA;IACA;EACA;EACAC,OAAA;IACA;IACAC,cAAA;MACA;MACA,UAAAV,UAAA,CAAAW,IAAA;QACA,KAAAH,iBAAA,QAAAI,SAAA;QACA;MACA;MACA;MACA,KAAAJ,iBAAA,QAAAI,SAAA,CAAAC,MAAA,CAAAC,QAAA,IACAA,QAAA,CAAAhB,IAAA,CAAAiB,QAAA,MAAAf,UAAA,CAAAW,IAAA,GACA;;MAEA;MACA,SAAAH,iBAAA,CAAAQ,MAAA;QACA,KAAAR,iBAAA;MACA;IACA;EACA;EACAS,QAAA;IAAA;IACA,KAAAT,iBAAA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}