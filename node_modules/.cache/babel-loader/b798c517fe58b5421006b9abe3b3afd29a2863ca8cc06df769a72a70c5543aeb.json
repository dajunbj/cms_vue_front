{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/esnext.iterator.map.js\";\nimport axios from 'axios';\nimport CommonSearchDialog from \"@/components/CommonSearchDialog.vue\";\nimport { deleteAllSelected } from \"@/js/ListView.js\";\nexport default {\n  name: \"EmployeeListView\",\n  components: {\n    CommonSearchDialog\n  },\n  data() {\n    return {\n      employeeName: \"\",\n      companyName: \"\",\n      companyId: \"\",\n      dialogVisible: false,\n      dialogData: [],\n      dialogColumns: [{\n        prop: \"id\",\n        label: \"ID\",\n        width: \"100\"\n      }, {\n        prop: \"name\",\n        label: \"名前\",\n        width: \"220\"\n      }, {\n        prop: \"department\",\n        label: \"部門\",\n        width: \"220\"\n      }],\n      dialogFilters: [{\n        prop: \"name\",\n        label: \"名前\",\n        type: \"el-input\",\n        width: 300,\n        props: {\n          placeholder: \"名前を入力してください\",\n          clearable: true\n        }\n      }, {\n        prop: \"department\",\n        label: \"部門\",\n        type: \"el-select\",\n        width: 300,\n        props: {\n          placeholder: \"部門を選択してください\",\n          clearable: true,\n          options: [{\n            label: \"営業\",\n            value: \"営業\"\n          }, {\n            label: \"開発\",\n            value: \"開発\"\n          }, {\n            label: \"経理\",\n            value: \"経理\"\n          }]\n        }\n      }],\n      employeeData: [],\n      currentPage: 1,\n      // 当前页\n      pageSize: 10,\n      // 每页数量\n      totalEmployees: 0,\n      // 总条目数\n      filteredEmployees: []\n    };\n  },\n  methods: {\n    deleteAllSelected,\n    showDialog() {\n      this.dialogVisible = true;\n    },\n    // async findEmployees() {\n    //   try {\n    //     const response = await axios.post('/employee/search', {\n    //       employeeName: this.employeeName,\n    //       companyName: this.companyName,\n    //     });\n    //     this.filteredEmployees = response.data;\n    //   } catch (error) {\n    //     this.$message.error('データの取得に失敗しました' + error);\n    //   }\n    // },\n    async findEmployees() {\n      try {\n        const response = await axios.post('/employee/search', {\n          employeeName: this.employeeName,\n          companyName: this.companyName,\n          currentPage: this.currentPage,\n          // 当前页\n          pageSize: this.pageSize // 每页数量\n        });\n        this.filteredEmployees = response.data.data; // 使用返回的分页数据\n        this.totalEmployees = response.data.total; // 设置总条目数\n      } catch (error) {\n        this.$message.error('データの取得に失敗しました' + error);\n      }\n    },\n    handleSelectCompany(selectedCompany) {\n      this.companyName = selectedCompany.name;\n      this.companyId = selectedCompany.id;\n    },\n    clickReference(row) {\n      alert(JSON.stringify(row));\n    },\n    clickEdit(row) {\n      alert(JSON.stringify(row));\n    },\n    handleSelectionChange(val) {\n      this.multipleSelection = val.map(item => item.id);\n    },\n    createRecord() {\n      this.$router.push('/employee/register');\n    },\n    // 翻页事件\n    handlePageChange(page) {\n      this.currentPage = page;\n      this.findEmployees(); // 重新调用查询方法\n    }\n  },\n  mounted() {\n    this.filteredEmployees = this.employeeData;\n  }\n};","map":{"version":3,"names":["axios","CommonSearchDialog","deleteAllSelected","name","components","data","employeeName","companyName","companyId","dialogVisible","dialogData","dialogColumns","prop","label","width","dialogFilters","type","props","placeholder","clearable","options","value","employeeData","currentPage","pageSize","totalEmployees","filteredEmployees","methods","showDialog","findEmployees","response","post","total","error","$message","handleSelectCompany","selectedCompany","id","clickReference","row","alert","JSON","stringify","clickEdit","handleSelectionChange","val","multipleSelection","map","item","createRecord","$router","push","handlePageChange","page","mounted"],"sources":["src/views/employee/EmployeeListView.vue"],"sourcesContent":["<template>\r\n  <div style=\"width: 100%; max-width: 1000px; overflow-x: hidden;\">\r\n    <!-- 添加标题部分 -->\r\n    <div class=\"header-container\">\r\n      <h2 class=\"header-title\">\r\n        <i class=\"el-icon-user\"></i> 社員一覧画面\r\n      </h2>\r\n    </div>\r\n    <div class=\"section-container\">\r\n\r\n    <el-row>\r\n      <el-col :span=\"6\">\r\n        <el-input v-model=\"employeeName\" placeholder=\"社員名をご入力ください。\" clearable></el-input>\r\n      </el-col>\r\n    </el-row>\r\n\r\n    <el-row>\r\n      <el-col :span=\"6\">\r\n        <el-input v-model=\"companyName\" placeholder=\"会社をご入力ください。\" clearable></el-input>\r\n      </el-col>\r\n      <el-col :span=\"2\">\r\n        <el-button icon=\"el-icon-search\" @click=\"showDialog\">選択</el-button>\r\n      </el-col>\r\n      <el-col :span=\"3\">\r\n        <el-input v-model=\"companyId\" :disabled=\"true\"></el-input>\r\n      </el-col>\r\n    </el-row>\r\n\r\n    <el-row>\r\n      <el-col :span=\"14\">\r\n        <el-button icon=\"el-icon-search\" @click=\"findEmployees\" type=\"primary\">検索</el-button>\r\n        <el-button icon=\"el-icon-user-solid\" @click=\"createRecord\" type=\"primary\">新規</el-button>\r\n        <el-button icon=\"el-icon-user-solid\" @click=\"deleteAllSelected('/employee/deleteAll')\" type=\"primary\">全削除</el-button>\r\n      </el-col>\r\n    </el-row>\r\n    \r\n</div>\r\n    <!-- 检索结果和翻页部分 -->\r\n    <div class=\"section-container\">\r\n\r\n    <el-row>\r\n      <el-col :span=\"24\">\r\n        <el-table :data=\"filteredEmployees\" border style=\"width: 100%; margin-top: 20px;\" height=\"300px\" @selection-change=\"handleSelectionChange\">\r\n          <el-table-column type=\"selection\" width=\"55\" align=\"center\"></el-table-column>\r\n          <el-table-column prop=\"employeeId\" label=\"ID\" header-align=\"center\" :class=\"'no-wrap-column'\"></el-table-column>\r\n          <el-table-column prop=\"name\" label=\"名前\" header-align=\"center\"></el-table-column>\r\n          <el-table-column prop=\"sex\" label=\"性別\" header-align=\"center\"></el-table-column>\r\n          <el-table-column prop=\"birthday\" label=\"誕生日\" header-align=\"center\"></el-table-column>\r\n          <el-table-column prop=\"address\" label=\"住所\" header-align=\"center\"></el-table-column>\r\n          <el-table-column prop=\"phone\" label=\"電話\" header-align=\"center\"></el-table-column>\r\n          <el-table-column label=\"動作\" align=\"center\">\r\n            <template slot-scope=\"scope\">\r\n              <el-button @click=\"clickReference(scope.row)\" type=\"text\" size=\"small\">参照</el-button>\r\n              <el-button @click=\"clickEdit(scope.row)\" type=\"text\" size=\"small\">編集</el-button>\r\n            </template>\r\n          </el-table-column>\r\n        </el-table>\r\n        \r\n        <!-- 翻页组件 -->\r\n        <!-- <el-pagination\r\n          style=\"margin-top: 20px; text-align: center;\"\r\n          background\r\n          layout=\"prev, pager, next\"\r\n          :total=\"totalEmployees\"\r\n          :page-size.sync=\"pageSize\"\r\n          :current-page.sync=\"currentPage\"\r\n          @current-change=\"handlePageChange\">\r\n        </el-pagination> -->\r\n        <el-pagination\r\n          style=\"margin-top: 20px; text-align: center;\"\r\n          background\r\n          layout=\"total, sizes, prev, pager, next, jumper\"\r\n          :current-page.sync=\"currentPage\"\r\n          :page-size.sync=\"pageSize\"\r\n          :page-sizes=\"[100, 200, 300, 400]\" \r\n          :total=\"totalEmployees\"\r\n          @current-change=\"handlePageChange\"\r\n          @size-change=\"handleSizeChange\">\r\n        </el-pagination>\r\n      </el-col>\r\n    </el-row>\r\n    <!-- 使用通用弹窗 -->\r\n    <CommonSearchDialog\r\n      :visible.sync=\"dialogVisible\"\r\n      :title=\"'会社選択画面'\"\r\n      :tableData=\"dialogData\"\r\n      :columns=\"dialogColumns\"\r\n      :filters=\"dialogFilters\"\r\n      @select-company=\"handleSelectCompany\"\r\n    />\r\n  </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nimport CommonSearchDialog from \"@/components/CommonSearchDialog.vue\";\r\nimport { deleteAllSelected } from \"@/js/ListView.js\";\r\n\r\nexport default {\r\n  name: \"EmployeeListView\",\r\n  components: { CommonSearchDialog },\r\n  data() {\r\n    return {\r\n      employeeName: \"\",\r\n      companyName: \"\",\r\n      companyId: \"\",\r\n      dialogVisible: false,\r\n      dialogData: [],\r\n      dialogColumns: [\r\n        { prop: \"id\", label: \"ID\", width: \"100\" },\r\n        { prop: \"name\", label: \"名前\", width: \"220\" },\r\n        { prop: \"department\", label: \"部門\", width: \"220\" },\r\n      ],\r\n      dialogFilters: [\r\n        {\r\n          prop: \"name\",\r\n          label: \"名前\",\r\n          type: \"el-input\",\r\n          width: 300,\r\n          props: { placeholder: \"名前を入力してください\", clearable: true },\r\n        },\r\n        {\r\n          prop: \"department\",\r\n          label: \"部門\",\r\n          type: \"el-select\",\r\n          width: 300,\r\n          props: {\r\n            placeholder: \"部門を選択してください\",\r\n            clearable: true,\r\n            options: [\r\n              { label: \"営業\", value: \"営業\" },\r\n              { label: \"開発\", value: \"開発\" },\r\n              { label: \"経理\", value: \"経理\" },\r\n            ],\r\n          },\r\n        },\r\n      ],\r\n      employeeData: [],\r\n      currentPage: 1, // 当前页\r\n      pageSize: 10, // 每页数量\r\n      totalEmployees: 0, // 总条目数\r\n      filteredEmployees: [],\r\n    };\r\n  },\r\n  methods: {\r\n    deleteAllSelected,\r\n    showDialog() {\r\n      this.dialogVisible = true;\r\n    },\r\n    // async findEmployees() {\r\n    //   try {\r\n    //     const response = await axios.post('/employee/search', {\r\n    //       employeeName: this.employeeName,\r\n    //       companyName: this.companyName,\r\n    //     });\r\n    //     this.filteredEmployees = response.data;\r\n    //   } catch (error) {\r\n    //     this.$message.error('データの取得に失敗しました' + error);\r\n    //   }\r\n    // },\r\n    async findEmployees() {\r\n  try {\r\n    const response = await axios.post('/employee/search', {\r\n      employeeName: this.employeeName,\r\n      companyName: this.companyName,\r\n      currentPage: this.currentPage, // 当前页\r\n      pageSize: this.pageSize, // 每页数量\r\n    });\r\n    this.filteredEmployees = response.data.data; // 使用返回的分页数据\r\n    this.totalEmployees = response.data.total; // 设置总条目数\r\n  } catch (error) {\r\n    this.$message.error('データの取得に失敗しました' + error);\r\n  }\r\n},\r\n    handleSelectCompany(selectedCompany) {\r\n      this.companyName = selectedCompany.name;\r\n      this.companyId = selectedCompany.id;\r\n    },\r\n    clickReference(row) {\r\n      alert(JSON.stringify(row));\r\n    },\r\n    clickEdit(row) {\r\n      alert(JSON.stringify(row));\r\n    },\r\n    handleSelectionChange(val) {\r\n      this.multipleSelection = val.map(item => item.id);\r\n    },\r\n    createRecord() {\r\n      this.$router.push('/employee/register');\r\n    },\r\n    // 翻页事件\r\n    handlePageChange(page) {\r\n      this.currentPage = page;\r\n      this.findEmployees(); // 重新调用查询方法\r\n    },\r\n  },\r\n  mounted() {\r\n    this.filteredEmployees = this.employeeData;\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.header-container {\r\n  /* background-color: #F5F7FA; */\r\n  padding: 15px;\r\n  margin-bottom: 20px;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n}\r\n.header-title {\r\n  margin: 0;\r\n  font-size: 24px;\r\n  font-weight: bold;\r\n  color: #333333;\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n.header-title i {\r\n  margin-right: 10px;\r\n  font-size: 28px;\r\n  color: #409EFF;\r\n}\r\n.section-container {\r\n  background-color: #FFFFFF;\r\n  padding: 15px;\r\n  margin-bottom: 20px;\r\n  border-radius: 8px;\r\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);\r\n}\r\n.section-title {\r\n  margin: 0 0 15px 0;\r\n  font-size: 20px;\r\n  font-weight: bold;\r\n  color: #333333;\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n.section-title i {\r\n  margin-right: 10px;\r\n  font-size: 24px;\r\n  color: #409EFF;\r\n}\r\n.el-input {\r\n  margin-bottom: 10px;\r\n}\r\n.no-wrap-column .cell {\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n}\r\n.el-table th {\r\n  background-color: #E3F2FD;\r\n  color: #333333;\r\n  font-weight: bold;\r\n}\r\n.el-table th .cell {\r\n  font-size: 14px;\r\n  text-align: center;\r\n}\r\n</style>\r\n"],"mappings":";;AA+FA,OAAAA,KAAA;AACA,OAAAC,kBAAA;AACA,SAAAC,iBAAA;AAEA;EACAC,IAAA;EACAC,UAAA;IAAAH;EAAA;EACAI,KAAA;IACA;MACAC,YAAA;MACAC,WAAA;MACAC,SAAA;MACAC,aAAA;MACAC,UAAA;MACAC,aAAA,GACA;QAAAC,IAAA;QAAAC,KAAA;QAAAC,KAAA;MAAA,GACA;QAAAF,IAAA;QAAAC,KAAA;QAAAC,KAAA;MAAA,GACA;QAAAF,IAAA;QAAAC,KAAA;QAAAC,KAAA;MAAA,EACA;MACAC,aAAA,GACA;QACAH,IAAA;QACAC,KAAA;QACAG,IAAA;QACAF,KAAA;QACAG,KAAA;UAAAC,WAAA;UAAAC,SAAA;QAAA;MACA,GACA;QACAP,IAAA;QACAC,KAAA;QACAG,IAAA;QACAF,KAAA;QACAG,KAAA;UACAC,WAAA;UACAC,SAAA;UACAC,OAAA,GACA;YAAAP,KAAA;YAAAQ,KAAA;UAAA,GACA;YAAAR,KAAA;YAAAQ,KAAA;UAAA,GACA;YAAAR,KAAA;YAAAQ,KAAA;UAAA;QAEA;MACA,EACA;MACAC,YAAA;MACAC,WAAA;MAAA;MACAC,QAAA;MAAA;MACAC,cAAA;MAAA;MACAC,iBAAA;IACA;EACA;EACAC,OAAA;IACAzB,iBAAA;IACA0B,WAAA;MACA,KAAAnB,aAAA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,MAAAoB,cAAA;MACA;QACA,MAAAC,QAAA,SAAA9B,KAAA,CAAA+B,IAAA;UACAzB,YAAA,OAAAA,YAAA;UACAC,WAAA,OAAAA,WAAA;UACAgB,WAAA,OAAAA,WAAA;UAAA;UACAC,QAAA,OAAAA,QAAA;QACA;QACA,KAAAE,iBAAA,GAAAI,QAAA,CAAAzB,IAAA,CAAAA,IAAA;QACA,KAAAoB,cAAA,GAAAK,QAAA,CAAAzB,IAAA,CAAA2B,KAAA;MACA,SAAAC,KAAA;QACA,KAAAC,QAAA,CAAAD,KAAA,mBAAAA,KAAA;MACA;IACA;IACAE,oBAAAC,eAAA;MACA,KAAA7B,WAAA,GAAA6B,eAAA,CAAAjC,IAAA;MACA,KAAAK,SAAA,GAAA4B,eAAA,CAAAC,EAAA;IACA;IACAC,eAAAC,GAAA;MACAC,KAAA,CAAAC,IAAA,CAAAC,SAAA,CAAAH,GAAA;IACA;IACAI,UAAAJ,GAAA;MACAC,KAAA,CAAAC,IAAA,CAAAC,SAAA,CAAAH,GAAA;IACA;IACAK,sBAAAC,GAAA;MACA,KAAAC,iBAAA,GAAAD,GAAA,CAAAE,GAAA,CAAAC,IAAA,IAAAA,IAAA,CAAAX,EAAA;IACA;IACAY,aAAA;MACA,KAAAC,OAAA,CAAAC,IAAA;IACA;IACA;IACAC,iBAAAC,IAAA;MACA,KAAA9B,WAAA,GAAA8B,IAAA;MACA,KAAAxB,aAAA;IACA;EACA;EACAyB,QAAA;IACA,KAAA5B,iBAAA,QAAAJ,YAAA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}