{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nimport CommonSearchDialog from \"@/components/CommonSearchDialog.vue\";\nexport default {\n  name: \"EmployeeRegisterView\",\n  components: {\n    CommonSearchDialog\n  },\n  data() {\n    return {\n      form: {\n        employeeName: \"\",\n        department: \"\",\n        companyName: \"\",\n        companyId: \"\",\n        email: \"\"\n      },\n      rules: {\n        employeeName: [{\n          required: true,\n          message: \"社員名を入力してください\",\n          trigger: \"blur\"\n        }],\n        department: [{\n          required: true,\n          message: \"部門を選択してください\",\n          trigger: \"change\"\n        }],\n        companyName: [{\n          required: true,\n          message: \"会社名を入力してください\",\n          trigger: \"blur\"\n        }],\n        email: [{\n          required: true,\n          message: \"メールアドレスを入力してください\",\n          trigger: \"blur\"\n        }, {\n          type: \"email\",\n          message: \"正しいメールアドレス形式を入力してください\",\n          trigger: \"blur\"\n        }]\n      },\n      dialogVisible: false,\n      dialogData: [],\n      dialogColumns: [{\n        prop: \"id\",\n        label: \"ID\",\n        width: \"100\"\n      }, {\n        prop: \"name\",\n        label: \"名前\",\n        width: \"220\"\n      }, {\n        prop: \"department\",\n        label: \"部門\",\n        width: \"220\"\n      }],\n      dialogFilters: [{\n        prop: \"name\",\n        label: \"名前\",\n        type: \"el-input\",\n        width: 300,\n        props: {\n          placeholder: \"名前を入力してください\",\n          clearable: true\n        }\n      }, {\n        prop: \"department\",\n        label: \"部門\",\n        type: \"el-select\",\n        width: 300,\n        props: {\n          placeholder: \"部門を選択してください\",\n          clearable: true,\n          options: [{\n            label: \"営業\",\n            value: \"営業\"\n          }, {\n            label: \"開発\",\n            value: \"開発\"\n          }, {\n            label: \"経理\",\n            value: \"経理\"\n          }]\n        }\n      }]\n    };\n  },\n  methods: {\n    showDialog() {\n      this.dialogVisible = true;\n    },\n    handleSelectCompany(selectedCompany) {\n      this.form.companyName = selectedCompany.name;\n      this.form.companyId = selectedCompany.id;\n    },\n    async submitForm() {\n      this.$refs.employeeForm.validate(async valid => {\n        if (valid) {\n          try {\n            await axios.post('/employee/register', {\n              employeeName: this.form.employeeName,\n              department: this.form.department,\n              companyName: this.form.companyName,\n              companyId: this.form.companyId,\n              email: this.form.email\n            });\n            this.$message.success('登録が成功しました');\n            this.resetForm();\n          } catch (error) {\n            this.$message.error('登録に失敗しました: ' + error);\n          }\n        } else {\n          this.$message.error('入力内容を確認してください');\n        }\n      });\n    },\n    resetForm() {\n      this.$refs.employeeForm.resetFields();\n      this.$router.push('/employee');\n    }\n  }\n};","map":{"version":3,"names":["axios","CommonSearchDialog","name","components","data","form","employeeName","department","companyName","companyId","email","rules","required","message","trigger","type","dialogVisible","dialogData","dialogColumns","prop","label","width","dialogFilters","props","placeholder","clearable","options","value","methods","showDialog","handleSelectCompany","selectedCompany","id","submitForm","$refs","employeeForm","validate","valid","post","$message","success","resetForm","error","resetFields","$router","push"],"sources":["src/views/employee/EmployeeRegisterView.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h2>社員新規画面</h2>\r\n    <!-- 社員名入力 -->\r\n    <el-form :model=\"form\" :rules=\"rules\" ref=\"employeeForm\" label-width=\"150px\">\r\n      <el-row style=\"margin-bottom: 20px;\">\r\n        <el-col :span=\"8\">\r\n          <el-form-item label=\"社員名\" prop=\"employeeName\">\r\n            <el-input v-model=\"form.employeeName\" placeholder=\"社員名をご入力ください。\" clearable></el-input>\r\n          </el-form-item>\r\n        </el-col>\r\n      </el-row>\r\n\r\n      <!-- 部門選択 -->\r\n      <el-row style=\"margin-bottom: 20px;\">\r\n        <el-col :span=\"8\">\r\n          <el-form-item label=\"部門\" prop=\"department\">\r\n            <el-select v-model=\"form.department\" placeholder=\"部門を選択してください\" clearable>\r\n              <el-option label=\"営業\" value=\"営業\"></el-option>\r\n              <el-option label=\"開発\" value=\"開発\"></el-option>\r\n              <el-option label=\"経理\" value=\"経理\"></el-option>\r\n            </el-select>\r\n          </el-form-item>\r\n        </el-col>\r\n      </el-row>\r\n\r\n      <!-- 会社名選択 -->\r\n      <el-row style=\"margin-bottom: 20px;\">\r\n        <el-col :span=\"8\">\r\n          <el-form-item label=\"会社名\" prop=\"companyName\">\r\n            <el-input v-model=\"form.companyName\" placeholder=\"会社をご入力ください。\" clearable></el-input>\r\n          </el-form-item>\r\n        </el-col>\r\n        <el-col :span=\"2\">\r\n          <el-button icon=\"el-icon-search\" @click=\"showDialog\">選択</el-button>\r\n        </el-col>\r\n        <el-col :span=\"4\">\r\n          <el-input v-model=\"form.companyId\" :disabled=\"true\"></el-input>\r\n        </el-col>\r\n      </el-row>\r\n\r\n      <!-- メールアドレス入力 -->\r\n      <el-row style=\"margin-bottom: 20px;\">\r\n        <el-col :span=\"8\">\r\n          <el-form-item label=\"メールアドレス\" prop=\"email\">\r\n            <el-input v-model=\"form.email\" placeholder=\"メールアドレスをご入力ください。\" clearable></el-input>\r\n          </el-form-item>\r\n        </el-col>\r\n      </el-row>\r\n\r\n      <!-- 提交ボタン -->\r\n      <el-row>\r\n        <el-col :span=\"8\">\r\n          <el-button type=\"primary\" @click=\"submitForm\">保存</el-button>\r\n          <el-button type=\"default\" @click=\"resetForm\">キャンセル</el-button>\r\n        </el-col>\r\n      </el-row>\r\n    </el-form>\r\n\r\n    <!-- 使用通用弹窗 -->\r\n    <CommonSearchDialog\r\n      :visible.sync=\"dialogVisible\"\r\n      :title=\"'会社選択画面'\"\r\n      :tableData=\"dialogData\"\r\n      :columns=\"dialogColumns\"\r\n      :filters=\"dialogFilters\"\r\n      @select-company=\"handleSelectCompany\" \r\n    />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nimport CommonSearchDialog from \"@/components/CommonSearchDialog.vue\";\r\n\r\nexport default {\r\n  name: \"EmployeeRegisterView\",\r\n  components: { CommonSearchDialog },\r\n  data() {\r\n    return {\r\n      form: {\r\n        employeeName: \"\",\r\n        department: \"\",\r\n        companyName: \"\",\r\n        companyId: \"\",\r\n        email: \"\",\r\n      },\r\n      rules: {\r\n        employeeName: [\r\n          { required: true, message: \"社員名を入力してください\", trigger: \"blur\" },\r\n        ],\r\n        department: [\r\n          { required: true, message: \"部門を選択してください\", trigger: \"change\" },\r\n        ],\r\n        companyName: [\r\n          { required: true, message: \"会社名を入力してください\", trigger: \"blur\" },\r\n        ],\r\n        email: [\r\n          { required: true, message: \"メールアドレスを入力してください\", trigger: \"blur\" },\r\n          { type: \"email\", message: \"正しいメールアドレス形式を入力してください\", trigger: \"blur\" },\r\n        ],\r\n      },\r\n      dialogVisible: false,\r\n      dialogData: [],\r\n      dialogColumns: [\r\n        { prop: \"id\", label: \"ID\", width: \"100\" },\r\n        { prop: \"name\", label: \"名前\", width: \"220\" },\r\n        { prop: \"department\", label: \"部門\", width: \"220\" },\r\n      ],\r\n      dialogFilters: [\r\n        {\r\n          prop: \"name\",\r\n          label: \"名前\",\r\n          type: \"el-input\",\r\n          width: 300,\r\n          props: { placeholder: \"名前を入力してください\", clearable: true },\r\n        },\r\n        {\r\n          prop: \"department\",\r\n          label: \"部門\",\r\n          type: \"el-select\",\r\n          width: 300,\r\n          props: {\r\n            placeholder: \"部門を選択してください\",\r\n            clearable: true,\r\n            options: [\r\n              { label: \"営業\", value: \"営業\" },\r\n              { label: \"開発\", value: \"開発\" },\r\n              { label: \"経理\", value: \"経理\" },\r\n            ],\r\n          },\r\n        },\r\n      ],\r\n    };\r\n  },\r\n  methods: {\r\n    showDialog() {\r\n      this.dialogVisible = true;\r\n    },\r\n    handleSelectCompany(selectedCompany) {\r\n      this.form.companyName = selectedCompany.name;\r\n      this.form.companyId = selectedCompany.id;\r\n    },\r\n    async submitForm() {\r\n      this.$refs.employeeForm.validate(async (valid) => {\r\n        if (valid) {\r\n          try {\r\n            await axios.post('/employee/register', {\r\n              employeeName: this.form.employeeName,\r\n              department: this.form.department,\r\n              companyName: this.form.companyName,\r\n              companyId: this.form.companyId,\r\n              email: this.form.email,\r\n            });\r\n            this.$message.success('登録が成功しました');\r\n            this.resetForm();\r\n          } catch (error) {\r\n            this.$message.error('登録に失敗しました: ' + error);\r\n          }\r\n        } else {\r\n          this.$message.error('入力内容を確認してください');\r\n        }\r\n      });\r\n    },\r\n    resetForm() {\r\n      this.$refs.employeeForm.resetFields();\r\n      this.$router.push('/employee');\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<!-- <style scoped>\r\n.el-input, .el-select {\r\n  margin-bottom: 20px;\r\n}\r\n</style> -->\r\n<style scoped>\r\n.page-title {\r\n  color: #333; /* 更改为深灰色 */\r\n  font-weight: bold; /* 加粗标题 */\r\n}\r\n\r\n.input-label {\r\n  color: #000; /* 更改为黑色 */\r\n}\r\n\r\n.el-input, .el-select {\r\n  background-color: #fff; /* 确保输入框背景是白色 */\r\n  color: #000; /* 文本颜色为黑色 */\r\n}\r\n</style>\r\n"],"mappings":";AAwEA,OAAAA,KAAA;AACA,OAAAC,kBAAA;AAEA;EACAC,IAAA;EACAC,UAAA;IAAAF;EAAA;EACAG,KAAA;IACA;MACAC,IAAA;QACAC,YAAA;QACAC,UAAA;QACAC,WAAA;QACAC,SAAA;QACAC,KAAA;MACA;MACAC,KAAA;QACAL,YAAA,GACA;UAAAM,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACAP,UAAA,GACA;UAAAK,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACAN,WAAA,GACA;UAAAI,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACAJ,KAAA,GACA;UAAAE,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,GACA;UAAAC,IAAA;UAAAF,OAAA;UAAAC,OAAA;QAAA;MAEA;MACAE,aAAA;MACAC,UAAA;MACAC,aAAA,GACA;QAAAC,IAAA;QAAAC,KAAA;QAAAC,KAAA;MAAA,GACA;QAAAF,IAAA;QAAAC,KAAA;QAAAC,KAAA;MAAA,GACA;QAAAF,IAAA;QAAAC,KAAA;QAAAC,KAAA;MAAA,EACA;MACAC,aAAA,GACA;QACAH,IAAA;QACAC,KAAA;QACAL,IAAA;QACAM,KAAA;QACAE,KAAA;UAAAC,WAAA;UAAAC,SAAA;QAAA;MACA,GACA;QACAN,IAAA;QACAC,KAAA;QACAL,IAAA;QACAM,KAAA;QACAE,KAAA;UACAC,WAAA;UACAC,SAAA;UACAC,OAAA,GACA;YAAAN,KAAA;YAAAO,KAAA;UAAA,GACA;YAAAP,KAAA;YAAAO,KAAA;UAAA,GACA;YAAAP,KAAA;YAAAO,KAAA;UAAA;QAEA;MACA;IAEA;EACA;EACAC,OAAA;IACAC,WAAA;MACA,KAAAb,aAAA;IACA;IACAc,oBAAAC,eAAA;MACA,KAAA1B,IAAA,CAAAG,WAAA,GAAAuB,eAAA,CAAA7B,IAAA;MACA,KAAAG,IAAA,CAAAI,SAAA,GAAAsB,eAAA,CAAAC,EAAA;IACA;IACA,MAAAC,WAAA;MACA,KAAAC,KAAA,CAAAC,YAAA,CAAAC,QAAA,OAAAC,KAAA;QACA,IAAAA,KAAA;UACA;YACA,MAAArC,KAAA,CAAAsC,IAAA;cACAhC,YAAA,OAAAD,IAAA,CAAAC,YAAA;cACAC,UAAA,OAAAF,IAAA,CAAAE,UAAA;cACAC,WAAA,OAAAH,IAAA,CAAAG,WAAA;cACAC,SAAA,OAAAJ,IAAA,CAAAI,SAAA;cACAC,KAAA,OAAAL,IAAA,CAAAK;YACA;YACA,KAAA6B,QAAA,CAAAC,OAAA;YACA,KAAAC,SAAA;UACA,SAAAC,KAAA;YACA,KAAAH,QAAA,CAAAG,KAAA,iBAAAA,KAAA;UACA;QACA;UACA,KAAAH,QAAA,CAAAG,KAAA;QACA;MACA;IACA;IACAD,UAAA;MACA,KAAAP,KAAA,CAAAC,YAAA,CAAAQ,WAAA;MACA,KAAAC,OAAA,CAAAC,IAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}