{"ast":null,"code":"import axios from 'axios';\nexport default {\n  name: \"UserView\",\n  data() {\n    return {\n      searchName: \"\",\n      searchCompany: \"\",\n      employeeData: [{\n        id: 1,\n        name: \"山田太郎\",\n        email: \"yamada@example.com\",\n        department: \"IT部門\"\n      }, {\n        id: 2,\n        name: \"鈴木花子\",\n        email: \"suzuki@example.com\",\n        department: \"営業部\"\n      }, {\n        id: 3,\n        name: \"田中一郎\",\n        email: \"tanaka@example.com\",\n        department: \"総務部\"\n      }],\n      gridData: [{\n        date: \"2016-05-02\",\n        name: \"王小虎\",\n        address: \"上海市普陀区金沙江路 1518 弄\"\n      }, {\n        date: \"2016-05-04\",\n        name: \"王小虎\",\n        address: \"上海市普陀区金沙江路 1518 弄\"\n      }],\n      filteredEmployees: [],\n      dialogVisible: false\n    };\n  },\n  methods: {\n    // findEmployees() {\n    //   if (!this.searchName.trim()) {\n    //     this.filteredEmployees = this.employeeData;\n    //     return;\n    //   }\n    //   this.filteredEmployees = this.employeeData.filter((employee) =>\n    //     employee.name.includes(this.searchName.trim())\n    //   );\n    // },\n    showDialog() {\n      this.dialogVisible = true;\n    },\n    async findEmployees() {\n      try {\n        const response = await axios.get('/employees/search', {\n          params: {\n            name: this.searchName\n          }\n        });\n        this.employees = response.data;\n      } catch (error) {\n        this.$message.error('データの取得に失敗しました');\n      }\n    }\n  },\n  mounted() {\n    this.filteredEmployees = this.employeeData;\n  }\n};","map":{"version":3,"names":["axios","name","data","searchName","searchCompany","employeeData","id","email","department","gridData","date","address","filteredEmployees","dialogVisible","methods","showDialog","findEmployees","response","get","params","employees","error","$message","mounted"],"sources":["src/views/UserView.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h2>社員一覧画面</h2>\r\n    <el-row>\r\n      <el-col :span=\"8\">\r\n        <el-input v-model=\"searchName\" placeholder=\"社員名をご入力ください。\" clearable></el-input>\r\n      </el-col>\r\n    </el-row>\r\n  \r\n    <el-row>\r\n        <el-col :span=\"8\">\r\n        <el-input v-model=\"送信\" placeholder=\"会社をご入力ください。\" clearable>\r\n        </el-input>\r\n      </el-col>\r\n      <el-col :span=\"8\">\r\n        <el-button icon=\"el-icon-search\"  @click=\"dialogVisible = true\"></el-button>\r\n\r\n<el-dialog title=\"收货地址\" :visible.sync=\"dialogVisible\">\r\n  <el-table :data=\"gridData\">\r\n    <el-table-column property=\"date\" label=\"日期\" width=\"150\"></el-table-column>\r\n    <el-table-column property=\"name\" label=\"姓名\" width=\"200\"></el-table-column>\r\n    <el-table-column property=\"address\" label=\"地址\"></el-table-column>\r\n  </el-table>\r\n</el-dialog>\r\n      </el-col>\r\n    </el-row>\r\n\r\n    <el-row>\r\n      <el-col :span=\"3\">\r\n        <el-button icon=\"el-icon-search\" @click=\"findEmployees\" type=\"primary\" >検索</el-button>\r\n      </el-col>\r\n    </el-row>\r\n\r\n    <el-table :data=\"filteredEmployees\" border style=\"width: 850px;margin-top: 10px;\" height=\"250px\" >\r\n      <el-table-column fixed prop=\"id\" label=\"ID\" width=\"80\"></el-table-column>\r\n      <el-table-column prop=\"name\" label=\"名前\"></el-table-column>\r\n      <el-table-column prop=\"email\" label=\"メール\"></el-table-column>\r\n      <el-table-column prop=\"department\" label=\"部門\"></el-table-column>\r\n    </el-table>\r\n\r\n\r\n\r\n  </div>\r\n  \r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n\r\n  name: \"UserView\",\r\n  data() {\r\n    return {\r\n      searchName: \"\",\r\n      searchCompany: \"\",\r\n      employeeData: [\r\n        { id: 1, name: \"山田太郎\", email: \"yamada@example.com\", department: \"IT部門\" },\r\n        { id: 2, name: \"鈴木花子\", email: \"suzuki@example.com\", department: \"営業部\" },\r\n        { id: 3, name: \"田中一郎\", email: \"tanaka@example.com\", department: \"総務部\" },\r\n      ],\r\n      gridData: [\r\n        { date: \"2016-05-02\", name: \"王小虎\", address: \"上海市普陀区金沙江路 1518 弄\" },\r\n        { date: \"2016-05-04\", name: \"王小虎\", address: \"上海市普陀区金沙江路 1518 弄\" },\r\n      ],\r\n      filteredEmployees: [],\r\n      dialogVisible: false,\r\n    };\r\n  },\r\n  methods: {\r\n    // findEmployees() {\r\n    //   if (!this.searchName.trim()) {\r\n    //     this.filteredEmployees = this.employeeData;\r\n    //     return;\r\n    //   }\r\n    //   this.filteredEmployees = this.employeeData.filter((employee) =>\r\n    //     employee.name.includes(this.searchName.trim())\r\n    //   );\r\n    // },\r\n    showDialog() {\r\n      this.dialogVisible = true;\r\n    },\r\n\r\n    async findEmployees() {\r\n      try {\r\n        const response = await axios.get('/employees/search', {\r\n          params: { name: this.searchName },\r\n        });\r\n        this.employees = response.data;\r\n      } catch (error) {\r\n        this.$message.error('データの取得に失敗しました');\r\n      }\r\n    },\r\n\r\n  },\r\n  mounted() {\r\n    this.filteredEmployees = this.employeeData;\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.el-input {\r\n  margin-bottom: 20px;\r\n}\r\n</style>\r\n"],"mappings":"AA+CA,OAAAA,KAAA;AAEA;EAEAC,IAAA;EACAC,KAAA;IACA;MACAC,UAAA;MACAC,aAAA;MACAC,YAAA,GACA;QAAAC,EAAA;QAAAL,IAAA;QAAAM,KAAA;QAAAC,UAAA;MAAA,GACA;QAAAF,EAAA;QAAAL,IAAA;QAAAM,KAAA;QAAAC,UAAA;MAAA,GACA;QAAAF,EAAA;QAAAL,IAAA;QAAAM,KAAA;QAAAC,UAAA;MAAA,EACA;MACAC,QAAA,GACA;QAAAC,IAAA;QAAAT,IAAA;QAAAU,OAAA;MAAA,GACA;QAAAD,IAAA;QAAAT,IAAA;QAAAU,OAAA;MAAA,EACA;MACAC,iBAAA;MACAC,aAAA;IACA;EACA;EACAC,OAAA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACAC,WAAA;MACA,KAAAF,aAAA;IACA;IAEA,MAAAG,cAAA;MACA;QACA,MAAAC,QAAA,SAAAjB,KAAA,CAAAkB,GAAA;UACAC,MAAA;YAAAlB,IAAA,OAAAE;UAAA;QACA;QACA,KAAAiB,SAAA,GAAAH,QAAA,CAAAf,IAAA;MACA,SAAAmB,KAAA;QACA,KAAAC,QAAA,CAAAD,KAAA;MACA;IACA;EAEA;EACAE,QAAA;IACA,KAAAX,iBAAA,QAAAP,YAAA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}