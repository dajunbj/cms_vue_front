{"ast":null,"code":"import axios from 'axios';\nimport CommonSearchDialog from \"@/components/CommonSearchDialog.vue\";\nexport default {\n  name: \"EmployeeListView\",\n  components: {\n    CommonSearchDialog\n  },\n  //◆初期化データ\n  data() {\n    return {\n      searchName: \"\",\n      searchCompany: \"\",\n      employeeData: [],\n      dialogData: [{\n        date: \"2016-05-02\",\n        name: \"王小虎\",\n        address: \"上海市普陀区金沙江路 1518 弄\"\n      }, {\n        date: \"2016-05-04\",\n        name: \"王小虎\",\n        address: \"上海市普陀区金沙江路 1518 弄\"\n      }],\n      dialogColumns: [{\n        prop: \"date\",\n        label: \"日期\",\n        width: \"150\"\n      }, {\n        prop: \"name\",\n        label: \"姓名\",\n        width: \"200\"\n      }, {\n        prop: \"address\",\n        label: \"地址\"\n      }],\n      filteredEmployees: [],\n      dialogVisible: false\n    };\n  },\n  //◆イベント\n  methods: {\n    showDialog() {\n      this.dialogVisible = true;\n    },\n    async findEmployees() {\n      try {\n        const response = await axios.get('/employee/search', {\n          params: {\n            name: this.searchName\n          }\n        });\n        this.filteredEmployees = response.data;\n      } catch (error) {\n        this.$message.error('データの取得に失敗しました' + error);\n      }\n    },\n    //◆全削除\n    clickReference(row) {\n      alert(row);\n    },\n    handleSelectionChange(val) {\n      this.multipleSelection = val;\n    },\n    //◆全削除\n    async deleteAllSelected() {\n      if (!this.multipleSelection || this.multipleSelection.length === 0) {\n        this.$message.warning(\"削除する明細を選択してください。\");\n        return;\n      }\n      try {\n        const response = await axios.post('/employee/delete', {\n          employees: this.multipleSelection\n        });\n        if (response.data.success) {\n          this.$message.success(\"選択された明細が削除されました。\");\n          this.findEmployees(); // データを再取得\n        } else {\n          this.$message.error(\"削除に失敗しました。\");\n        }\n      } catch (error) {\n        this.$message.error(\"エラーが発生しました: \" + error);\n      }\n    }\n  },\n  //◆初期化\n  mounted() {\n    this.filteredEmployees = this.employeeData;\n  }\n};","map":{"version":3,"names":["axios","CommonSearchDialog","name","components","data","searchName","searchCompany","employeeData","dialogData","date","address","dialogColumns","prop","label","width","filteredEmployees","dialogVisible","methods","showDialog","findEmployees","response","get","params","error","$message","clickReference","row","alert","handleSelectionChange","val","multipleSelection","deleteAllSelected","length","warning","post","employees","success","mounted"],"sources":["src/views/EmployeeListView.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h2>社員一覧画面</h2>\r\n    <el-row>\r\n      <el-col :span=\"8\">\r\n        <el-input v-model=\"searchName\" placeholder=\"社員名をご入力ください。\" clearable></el-input>\r\n      </el-col>\r\n    </el-row>\r\n  \r\n    <el-row>\r\n        <el-col :span=\"8\">\r\n        <el-input v-model=\"送信\" placeholder=\"会社をご入力ください。\" clearable>\r\n        </el-input>\r\n      </el-col>\r\n      <el-col :span=\"8\">\r\n        <el-button icon=\"el-icon-search\" @click=\"showDialog\">選択</el-button>\r\n      </el-col>\r\n    </el-row>\r\n\r\n    <el-row>\r\n      <el-col :span=\"12\">\r\n        <el-button icon=\"el-icon-search\" @click=\"findEmployees\" type=\"primary\" >検索</el-button>\r\n        <el-button icon=\"el-icon-user-solid\" @click=\"findEmployees\" type=\"primary\" >新規</el-button>\r\n        <el-button icon=\"el-icon-user-solid\" @click=\"deleteAllSelected\" type=\"primary\" >全削除</el-button>\r\n      </el-col>\r\n    </el-row>\r\n\r\n    <el-table :data=\"filteredEmployees\" border style=\"width: 850px;margin-top: 10px;\" height=\"250px\"\r\n              @selection-change=\"handleSelectionChange\"\r\n              >\r\n      <el-table-column type=\"selection\" width=\"55\" align=\"center\" >  </el-table-column>\r\n      <el-table-column fixed prop=\"id\" label=\"ID\" width=\"80\" header-align=\"center\"></el-table-column>\r\n      <el-table-column prop=\"name\" label=\"名前\" header-align=\"center\"></el-table-column>\r\n      <el-table-column prop=\"email\" label=\"メール\" header-align=\"center\"></el-table-column>\r\n      <el-table-column prop=\"department\" label=\"部門\" header-align=\"center\"></el-table-column>\r\n      <el-table-column fixed=\"right\" label=\"動作\" width=\"100\" align=\"center\">\r\n        <template slot-scope=\"scope\">\r\n          <el-button @click=\"clickReference(scope.row)\" type=\"text\" size=\"small\">参照</el-button>\r\n          <el-button type=\"text\" size=\"small\">編集</el-button>\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n\r\n\r\n      <!-- 使用通用弹窗 -->\r\n      <CommonSearchDialog\r\n          :visible.sync=\"dialogVisible\"\r\n          :title=\"社員選択画面\"\r\n          :tableData=\"dialogData\"\r\n          :columns=\"dialogColumns\"\r\n        />\r\n  </div>\r\n  \r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nimport CommonSearchDialog from \"@/components/CommonSearchDialog.vue\";\r\n\r\nexport default {\r\n\r\n  name: \"EmployeeListView\",\r\n  components: { CommonSearchDialog },\r\n  //◆初期化データ\r\n  data() {\r\n    return {\r\n      searchName: \"\",\r\n      searchCompany: \"\",\r\n      employeeData: [],\r\n      dialogData: [\r\n        { date: \"2016-05-02\", name: \"王小虎\", address: \"上海市普陀区金沙江路 1518 弄\" },\r\n        { date: \"2016-05-04\", name: \"王小虎\", address: \"上海市普陀区金沙江路 1518 弄\" },\r\n      ],\r\n      dialogColumns: [\r\n        { prop: \"date\", label: \"日期\", width: \"150\" },\r\n        { prop: \"name\", label: \"姓名\", width: \"200\" },\r\n        { prop: \"address\", label: \"地址\" },\r\n      ],\r\n      filteredEmployees: [],\r\n      dialogVisible: false,\r\n    };\r\n  },\r\n  //◆イベント\r\n  methods: {\r\n\r\n    showDialog() {\r\n      this.dialogVisible = true;\r\n    },\r\n\r\n    async findEmployees() {\r\n      try {\r\n        const response = await axios.get('/employee/search', {\r\n          params: { name: this.searchName },\r\n        });\r\n        this.filteredEmployees = response.data;\r\n      } catch (error) {\r\n        this.$message.error('データの取得に失敗しました'+error);\r\n      }\r\n    },\r\n    //◆全削除\r\n    clickReference(row) {\r\n        alert(row);\r\n    },\r\n    handleSelectionChange(val) {\r\n      this.multipleSelection = val;\r\n    },\r\n    //◆全削除\r\n    async deleteAllSelected() {\r\n      \r\n      if (!this.multipleSelection || this.multipleSelection.length === 0) {\r\n        this.$message.warning(\"削除する明細を選択してください。\");\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const response = await axios.post('/employee/delete', {\r\n          employees: this.multipleSelection\r\n        });\r\n        \r\n        if (response.data.success) {\r\n          this.$message.success(\"選択された明細が削除されました。\");\r\n          this.findEmployees(); // データを再取得\r\n        } else {\r\n          this.$message.error(\"削除に失敗しました。\");\r\n        }\r\n\r\n      } catch (error) {\r\n        this.$message.error(\"エラーが発生しました: \" + error);\r\n      }\r\n    }\r\n\r\n\r\n  },\r\n\r\n  //◆初期化\r\n  mounted() {\r\n    this.filteredEmployees = this.employeeData;\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.el-input {\r\n  margin-bottom: 20px;\r\n}\r\n</style>\r\n"],"mappings":"AAwDA,OAAAA,KAAA;AACA,OAAAC,kBAAA;AAEA;EAEAC,IAAA;EACAC,UAAA;IAAAF;EAAA;EACA;EACAG,KAAA;IACA;MACAC,UAAA;MACAC,aAAA;MACAC,YAAA;MACAC,UAAA,GACA;QAAAC,IAAA;QAAAP,IAAA;QAAAQ,OAAA;MAAA,GACA;QAAAD,IAAA;QAAAP,IAAA;QAAAQ,OAAA;MAAA,EACA;MACAC,aAAA,GACA;QAAAC,IAAA;QAAAC,KAAA;QAAAC,KAAA;MAAA,GACA;QAAAF,IAAA;QAAAC,KAAA;QAAAC,KAAA;MAAA,GACA;QAAAF,IAAA;QAAAC,KAAA;MAAA,EACA;MACAE,iBAAA;MACAC,aAAA;IACA;EACA;EACA;EACAC,OAAA;IAEAC,WAAA;MACA,KAAAF,aAAA;IACA;IAEA,MAAAG,cAAA;MACA;QACA,MAAAC,QAAA,SAAApB,KAAA,CAAAqB,GAAA;UACAC,MAAA;YAAApB,IAAA,OAAAG;UAAA;QACA;QACA,KAAAU,iBAAA,GAAAK,QAAA,CAAAhB,IAAA;MACA,SAAAmB,KAAA;QACA,KAAAC,QAAA,CAAAD,KAAA,mBAAAA,KAAA;MACA;IACA;IACA;IACAE,eAAAC,GAAA;MACAC,KAAA,CAAAD,GAAA;IACA;IACAE,sBAAAC,GAAA;MACA,KAAAC,iBAAA,GAAAD,GAAA;IACA;IACA;IACA,MAAAE,kBAAA;MAEA,UAAAD,iBAAA,SAAAA,iBAAA,CAAAE,MAAA;QACA,KAAAR,QAAA,CAAAS,OAAA;QACA;MACA;MAEA;QACA,MAAAb,QAAA,SAAApB,KAAA,CAAAkC,IAAA;UACAC,SAAA,OAAAL;QACA;QAEA,IAAAV,QAAA,CAAAhB,IAAA,CAAAgC,OAAA;UACA,KAAAZ,QAAA,CAAAY,OAAA;UACA,KAAAjB,aAAA;QACA;UACA,KAAAK,QAAA,CAAAD,KAAA;QACA;MAEA,SAAAA,KAAA;QACA,KAAAC,QAAA,CAAAD,KAAA,kBAAAA,KAAA;MACA;IACA;EAGA;EAEA;EACAc,QAAA;IACA,KAAAtB,iBAAA,QAAAR,YAAA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}